{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-css\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(_ref) {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n  const onChange = useCallback(newValue => {\n    if (!socket) return;\n    setFetchedCode(newValue);\n    socket.emit(\"update code\", {\n      roomId,\n      code: newValue\n    });\n    socket.emit(\"syncing the code\", {\n      roomId: roomId\n    });\n  }, [socket, roomId]);\n  const handleLanguageChange = useCallback(e => {\n    if (!socket) return;\n    const newLanguage = e.target.value;\n    setLanguage(newLanguage);\n    socket.emit(\"update language\", {\n      roomId,\n      languageUsed: newLanguage\n    });\n    socket.emit(\"syncing the language\", {\n      roomId: roomId\n    });\n  }, [socket, roomId]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    if (!socket || !roomId) return;\n\n    try {\n      // Properly leave the room first, then disconnect\n      socket.emit(\"leave room\", {\n        roomId\n      }); // Small delay to ensure the leave event is processed\n\n      setTimeout(() => {\n        socket.disconnect();\n        navigate('/', {\n          replace: true,\n          state: {}\n        });\n      }, 100);\n    } catch (error) {\n      console.error(\"Error leaving room:\", error);\n      navigate('/', {\n        replace: true,\n        state: {}\n      });\n    }\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async text => {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(text);\n        toast.success('Room ID copied to clipboard');\n      } else {\n        // Fallback for older browsers or non-HTTPS\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.position = 'fixed';\n        textArea.style.left = '-999999px';\n        textArea.style.top = '-999999px';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        document.execCommand('copy');\n        textArea.remove();\n        toast.success('Room ID copied to clipboard');\n      }\n    } catch (error) {\n      console.error('Failed to copy room ID:', error);\n      toast.error('Failed to copy room ID');\n    }\n  }, []); // Setup socket event listeners\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUpdateClientList = _ref2 => {\n      let {\n        userslist\n      } = _ref2;\n      console.log(\"Updated users list:\", userslist);\n      setFetchedUsers(userslist || []);\n      setIsLoading(false);\n    };\n\n    const handleLanguageChange = _ref3 => {\n      let {\n        languageUsed\n      } = _ref3;\n      console.log(\"Language changed to:\", languageUsed);\n      setLanguage(languageUsed);\n    };\n\n    const handleCodeChange = _ref4 => {\n      let {\n        code\n      } = _ref4;\n      console.log(\"Code updated\");\n      setFetchedCode(code || \"\");\n    };\n\n    const handleNewMemberJoined = _ref5 => {\n      let {\n        username\n      } = _ref5;\n      toast.success(`${username} joined the room`);\n    };\n\n    const handleMemberLeft = _ref6 => {\n      let {\n        username\n      } = _ref6;\n      toast.success(`${username} left the room`);\n    };\n\n    const handleSocketError = error => {\n      console.error(\"Socket error:\", error);\n      toast.error(\"Connection error occurred\");\n    };\n\n    const handleDisconnect = reason => {\n      console.log(\"Socket disconnected:\", reason);\n\n      if (reason === 'io server disconnect') {\n        // Server disconnected the socket, try to reconnect\n        socket.connect();\n      }\n\n      toast.error(\"Disconnected from server\");\n    }; // Add event listeners\n\n\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    socket.on(\"new member joined\", handleNewMemberJoined);\n    socket.on(\"member left\", handleMemberLeft);\n    socket.on(\"error\", handleSocketError);\n    socket.on(\"disconnect\", handleDisconnect); // Cleanup function to remove event listeners\n\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n      socket.off(\"new member joined\", handleNewMemberJoined);\n      socket.off(\"member left\", handleMemberLeft);\n      socket.off(\"error\", handleSocketError);\n      socket.off(\"disconnect\", handleDisconnect);\n    };\n  }, [socket]); // Handle browser back button and page refresh\n\n  useEffect(() => {\n    const handlePopState = e => {\n      var _eventStateObj$usr;\n\n      const eventStateObj = e.state;\n\n      if (!(eventStateObj !== null && eventStateObj !== void 0 && (_eventStateObj$usr = eventStateObj.usr) !== null && _eventStateObj$usr !== void 0 && _eventStateObj$usr.username)) {\n        handleLeave();\n      }\n    };\n\n    const handleBeforeUnload = e => {\n      if (socket && roomId) {\n        socket.emit(\"leave room\", {\n          roomId\n        });\n      }\n    };\n\n    window.addEventListener(\"popstate\", handlePopState);\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [handleLeave, socket, roomId]);\n\n  if (!socket) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connection error. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: () => navigate('/'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarUsersWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"language\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            disabled: isLoading,\n            children: languagesAvailable.map(eachLanguage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachLanguage,\n              children: eachLanguage\n            }, eachLanguage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"codeKeybinding\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(eachKeybinding => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachKeybinding,\n              children: eachKeybinding\n            }, eachKeybinding, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected Users: \", isLoading ? \"Loading...\" : `(${fetchedUsers.length})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomSidebarUsers\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsersEach\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachName\",\n              children: \"Loading users...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this) : fetchedUsers.length > 0 ? fetchedUsers.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsersEach\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachAvatar\",\n              style: {\n                backgroundColor: generateColor(each)\n              },\n              children: each.slice(0, 2).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachName\",\n              children: each\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, each, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsersEach\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachName\",\n              children: \"No users connected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roomSidebarCopyBtn\",\n        onClick: () => copyToClipboard(roomId),\n        disabled: !roomId,\n        children: \"Copy Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roomSidebarBtn\",\n        onClick: handleLeave,\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      placeholder: \"Write your code here.\",\n      className: \"roomCodeEditor\",\n      mode: language,\n      keyboardHandler: codeKeybinding,\n      theme: \"monokai\",\n      name: \"collabEditor\",\n      width: \"auto\",\n      height: \"auto\",\n      value: fetchedCode,\n      onChange: onChange,\n      fontSize: 15,\n      showPrintMargin: true,\n      showGutter: true,\n      highlightActiveLine: true,\n      enableLiveAutocompletion: true,\n      enableBasicAutocompletion: false,\n      enableSnippets: false,\n      wrapEnabled: true,\n      tabSize: 2,\n      readOnly: isLoading,\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      toastOptions: {\n        duration: 3000,\n        style: {\n          background: '#363636',\n          color: '#fff'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"/SlKY3opYjsMV2KnwiRo/MarCy8=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","AceEditor","Toaster","toast","useNavigate","useParams","generateColor","Room","socket","navigate","roomId","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","isLoading","setIsLoading","languagesAvailable","codeKeybindingsAvailable","onChange","newValue","emit","code","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","setTimeout","disconnect","replace","state","error","console","copyToClipboard","text","navigator","clipboard","window","isSecureContext","writeText","success","textArea","document","createElement","style","position","left","top","body","appendChild","focus","select","execCommand","remove","handleUpdateClientList","userslist","log","handleCodeChange","handleNewMemberJoined","username","handleMemberLeft","handleSocketError","handleDisconnect","reason","connect","on","off","handlePopState","eventStateObj","usr","handleBeforeUnload","addEventListener","removeEventListener","map","eachLanguage","eachKeybinding","length","each","backgroundColor","slice","toUpperCase","$blockScrolling","duration","background","color"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css'\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-yaml\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/mode-css\";\r\n\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room({ socket }) {\r\n  const navigate = useNavigate()\r\n  const { roomId } = useParams()\r\n  const [fetchedUsers, setFetchedUsers] = useState([])\r\n  const [fetchedCode, setFetchedCode] = useState(\"\")\r\n  const [language, setLanguage] = useState(\"javascript\")\r\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\"]\r\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"]\r\n\r\n  const onChange = useCallback((newValue) => {\r\n    if (!socket) return\r\n    \r\n    setFetchedCode(newValue)\r\n    socket.emit(\"update code\", { roomId, code: newValue })\r\n    socket.emit(\"syncing the code\", { roomId: roomId })\r\n  }, [socket, roomId])\r\n\r\n  const handleLanguageChange = useCallback((e) => {\r\n    if (!socket) return\r\n    \r\n    const newLanguage = e.target.value\r\n    setLanguage(newLanguage)\r\n    socket.emit(\"update language\", { roomId, languageUsed: newLanguage })\r\n    socket.emit(\"syncing the language\", { roomId: roomId })\r\n  }, [socket, roomId])\r\n\r\n  const handleCodeKeybindingChange = useCallback((e) => {\r\n    const value = e.target.value\r\n    setCodeKeybinding(value === \"default\" ? undefined : value)\r\n  }, [])\r\n\r\n  const handleLeave = useCallback(() => {\r\n    if (!socket || !roomId) return\r\n    \r\n    try {\r\n      // Properly leave the room first, then disconnect\r\n      socket.emit(\"leave room\", { roomId })\r\n      \r\n      // Small delay to ensure the leave event is processed\r\n      setTimeout(() => {\r\n        socket.disconnect()\r\n        navigate('/', { replace: true, state: {} })\r\n      }, 100)\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error leaving room:\", error)\r\n      navigate('/', { replace: true, state: {} })\r\n    }\r\n  }, [socket, roomId, navigate])\r\n\r\n  const copyToClipboard = useCallback(async (text) => {\r\n    try {\r\n      if (navigator.clipboard && window.isSecureContext) {\r\n        await navigator.clipboard.writeText(text)\r\n        toast.success('Room ID copied to clipboard')\r\n      } else {\r\n        // Fallback for older browsers or non-HTTPS\r\n        const textArea = document.createElement('textarea')\r\n        textArea.value = text\r\n        textArea.style.position = 'fixed'\r\n        textArea.style.left = '-999999px'\r\n        textArea.style.top = '-999999px'\r\n        document.body.appendChild(textArea)\r\n        textArea.focus()\r\n        textArea.select()\r\n        document.execCommand('copy')\r\n        textArea.remove()\r\n        toast.success('Room ID copied to clipboard')\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to copy room ID:', error)\r\n      toast.error('Failed to copy room ID')\r\n    }\r\n  }, [])\r\n\r\n  // Setup socket event listeners\r\n  useEffect(() => {\r\n    if (!socket) return\r\n\r\n    const handleUpdateClientList = ({ userslist }) => {\r\n      console.log(\"Updated users list:\", userslist)\r\n      setFetchedUsers(userslist || [])\r\n      setIsLoading(false)\r\n    }\r\n\r\n    const handleLanguageChange = ({ languageUsed }) => {\r\n      console.log(\"Language changed to:\", languageUsed)\r\n      setLanguage(languageUsed)\r\n    }\r\n\r\n    const handleCodeChange = ({ code }) => {\r\n      console.log(\"Code updated\")\r\n      setFetchedCode(code || \"\")\r\n    }\r\n\r\n    const handleNewMemberJoined = ({ username }) => {\r\n      toast.success(`${username} joined the room`)\r\n    }\r\n\r\n    const handleMemberLeft = ({ username }) => {\r\n      toast.success(`${username} left the room`)\r\n    }\r\n\r\n    const handleSocketError = (error) => {\r\n      console.error(\"Socket error:\", error)\r\n      toast.error(\"Connection error occurred\")\r\n    }\r\n\r\n    const handleDisconnect = (reason) => {\r\n      console.log(\"Socket disconnected:\", reason)\r\n      if (reason === 'io server disconnect') {\r\n        // Server disconnected the socket, try to reconnect\r\n        socket.connect()\r\n      }\r\n      toast.error(\"Disconnected from server\")\r\n    }\r\n\r\n    // Add event listeners\r\n    socket.on(\"updating client list\", handleUpdateClientList)\r\n    socket.on(\"on language change\", handleLanguageChange)\r\n    socket.on(\"on code change\", handleCodeChange)\r\n    socket.on(\"new member joined\", handleNewMemberJoined)\r\n    socket.on(\"member left\", handleMemberLeft)\r\n    socket.on(\"error\", handleSocketError)\r\n    socket.on(\"disconnect\", handleDisconnect)\r\n\r\n    // Cleanup function to remove event listeners\r\n    return () => {\r\n      socket.off(\"updating client list\", handleUpdateClientList)\r\n      socket.off(\"on language change\", handleLanguageChange)\r\n      socket.off(\"on code change\", handleCodeChange)\r\n      socket.off(\"new member joined\", handleNewMemberJoined)\r\n      socket.off(\"member left\", handleMemberLeft)\r\n      socket.off(\"error\", handleSocketError)\r\n      socket.off(\"disconnect\", handleDisconnect)\r\n    }\r\n  }, [socket])\r\n\r\n  // Handle browser back button and page refresh\r\n  useEffect(() => {\r\n    const handlePopState = (e) => {\r\n      const eventStateObj = e.state\r\n      if (!eventStateObj?.usr?.username) {\r\n        handleLeave()\r\n      }\r\n    }\r\n\r\n    const handleBeforeUnload = (e) => {\r\n      if (socket && roomId) {\r\n        socket.emit(\"leave room\", { roomId })\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"popstate\", handlePopState)\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handlePopState)\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload)\r\n    }\r\n  }, [handleLeave, socket, roomId])\r\n\r\n  if (!socket) {\r\n    return (\r\n      <div className=\"room\">\r\n        <div className=\"roomSidebar\">\r\n          <p>Connection error. Please try again.</p>\r\n          <button className=\"roomSidebarBtn\" onClick={() => navigate('/')}>\r\n            Go Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"room\">\r\n      <div className=\"roomSidebar\">\r\n        <div className=\"roomSidebarUsersWrapper\">\r\n          <div className=\"languageFieldWrapper\">\r\n            <select \r\n              className=\"languageField\" \r\n              name=\"language\" \r\n              id=\"language\" \r\n              value={language} \r\n              onChange={handleLanguageChange}\r\n              disabled={isLoading}\r\n            >\r\n              {languagesAvailable.map(eachLanguage => (\r\n                <option key={eachLanguage} value={eachLanguage}>\r\n                  {eachLanguage}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"languageFieldWrapper\">\r\n            <select \r\n              className=\"languageField\" \r\n              name=\"codeKeybinding\" \r\n              id=\"codeKeybinding\" \r\n              value={codeKeybinding || \"default\"} \r\n              onChange={handleCodeKeybindingChange}\r\n            >\r\n              {codeKeybindingsAvailable.map(eachKeybinding => (\r\n                <option key={eachKeybinding} value={eachKeybinding}>\r\n                  {eachKeybinding}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <p>Connected Users: {isLoading ? \"Loading...\" : `(${fetchedUsers.length})`}</p>\r\n          <div className=\"roomSidebarUsers\">\r\n            {isLoading ? (\r\n              <div className=\"roomSidebarUsersEach\">\r\n                <div className=\"roomSidebarUsersEachName\">Loading users...</div>\r\n              </div>\r\n            ) : fetchedUsers.length > 0 ? (\r\n              fetchedUsers.map((each) => (\r\n                <div key={each} className=\"roomSidebarUsersEach\">\r\n                  <div \r\n                    className=\"roomSidebarUsersEachAvatar\" \r\n                    style={{ backgroundColor: generateColor(each) }}\r\n                  >\r\n                    {each.slice(0, 2).toUpperCase()}\r\n                  </div>\r\n                  <div className=\"roomSidebarUsersEachName\">{each}</div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"roomSidebarUsersEach\">\r\n                <div className=\"roomSidebarUsersEachName\">No users connected</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <button \r\n          className=\"roomSidebarCopyBtn\" \r\n          onClick={() => copyToClipboard(roomId)}\r\n          disabled={!roomId}\r\n        >\r\n          Copy Room ID\r\n        </button>\r\n        <button className=\"roomSidebarBtn\" onClick={handleLeave}>\r\n          Leave Room\r\n        </button>\r\n      </div>\r\n\r\n      <AceEditor\r\n        placeholder=\"Write your code here.\"\r\n        className=\"roomCodeEditor\"\r\n        mode={language}\r\n        keyboardHandler={codeKeybinding}\r\n        theme=\"monokai\"\r\n        name=\"collabEditor\"\r\n        width=\"auto\"\r\n        height=\"auto\"\r\n        value={fetchedCode}\r\n        onChange={onChange}\r\n        fontSize={15}\r\n        showPrintMargin={true}\r\n        showGutter={true}\r\n        highlightActiveLine={true}\r\n        enableLiveAutocompletion={true}\r\n        enableBasicAutocompletion={false}\r\n        enableSnippets={false}\r\n        wrapEnabled={true}\r\n        tabSize={2}\r\n        readOnly={isLoading}\r\n        editorProps={{\r\n          $blockScrolling: true\r\n        }}\r\n      />\r\n      \r\n      <Toaster \r\n        position=\"top-right\"\r\n        toastOptions={{\r\n          duration: 3000,\r\n          style: {\r\n            background: '#363636',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}