{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\components\\\\SocketWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addPropsToReactElement(element, props) {\n  if ( /*#__PURE__*/React.isValidElement(element)) {\n    return /*#__PURE__*/React.cloneElement(element, props);\n  }\n\n  return element;\n}\n\nfunction addPropsToChildren(children, props) {\n  if (!Array.isArray(children)) {\n    return addPropsToReactElement(children, props);\n  }\n\n  return children.map(childElement => addPropsToReactElement(childElement, props));\n}\n\nexport default function SocketWrapper(_ref) {\n  _s();\n\n  var _location$state2;\n\n  let {\n    children\n  } = _ref;\n  const [isConnected, setIsConnected] = useState(false);\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams(); // Initialize socket connection only once\n\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\", {\n        transports: ['websocket', 'polling'],\n        // Fallback options\n        timeout: 5000\n      }); // Set up connection event listeners\n\n      socketRef.current.on('connect', () => {\n        console.log('Connected to server:', socketRef.current.id);\n        setIsConnected(true);\n      });\n      socketRef.current.on('disconnect', reason => {\n        console.log('Disconnected from server:', reason);\n        setIsConnected(false);\n      });\n      socketRef.current.on('connect_error', error => {\n        console.error('Connection error:', error);\n        toast.error('Failed to connect to server');\n      }); // Set up room-related event listeners\n\n      socketRef.current.on('error', error => {\n        console.error('Socket error:', error);\n        toast.error(error.message || 'Socket error occurred');\n      });\n      socketRef.current.on('new member joined', _ref2 => {\n        let {\n          username\n        } = _ref2;\n        toast.success(`${username} joined the room`);\n      });\n      socketRef.current.on('member left', _ref3 => {\n        let {\n          username\n        } = _ref3;\n        toast.success(`${username} left the room`);\n      });\n    } // Cleanup on unmount\n\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, []); // Handle room joining\n\n  useEffect(() => {\n    var _location$state;\n\n    function kickStrangerOut() {\n      navigate(\"/\", {\n        replace: true\n      });\n      toast.error(\"No username provided\");\n    }\n\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.username)) {\n      kickStrangerOut();\n      return;\n    } // Only join room when socket is connected\n\n\n    if (isConnected && socketRef.current && roomId) {\n      console.log(`Joining room: ${roomId} as ${location.state.username}`);\n      socketRef.current.emit(\"when a user joins\", {\n        roomId,\n        username: location.state.username\n      });\n    }\n  }, [isConnected, location.state, roomId, navigate]); // Handle page refresh/navigation cleanup\n\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (socketRef.current && roomId) {\n        socketRef.current.emit(\"leave room\", {\n          roomId\n        });\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n\n      if (socketRef.current && roomId) {\n        socketRef.current.emit(\"leave room\", {\n          roomId\n        });\n      }\n    };\n  }, [roomId]);\n\n  if (!((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.username)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No username provided. Please use the form to join a room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: addPropsToChildren(children, {\n      socket: socketRef.current\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SocketWrapper, \"sq2Kt7JjlTxqW/sBii/H8VDCWOY=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = SocketWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketWrapper\");","map":{"version":3,"names":["React","useEffect","useState","useRef","toast","useLocation","useNavigate","useParams","io","addPropsToReactElement","element","props","isValidElement","cloneElement","addPropsToChildren","children","Array","isArray","map","childElement","SocketWrapper","isConnected","setIsConnected","socketRef","location","navigate","roomId","current","process","env","REACT_APP_WEB_SOCKET_URL","transports","timeout","on","console","log","id","reason","error","message","username","success","disconnect","kickStrangerOut","replace","state","emit","handleBeforeUnload","window","addEventListener","removeEventListener","socket"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/components/SocketWrapper.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\n\nfunction addPropsToReactElement(element, props) {\n    if (React.isValidElement(element)) {\n        return React.cloneElement(element, props)\n    }\n    return element\n}\n\nfunction addPropsToChildren(children, props) {\n    if (!Array.isArray(children)) {\n        return addPropsToReactElement(children, props)\n    }\n    return children.map(childElement =>\n        addPropsToReactElement(childElement, props)\n    )\n}\n\nexport default function SocketWrapper({ children }) {\n    const [isConnected, setIsConnected] = useState(false)\n    const socketRef = useRef(null)\n    \n    const location = useLocation()\n    const navigate = useNavigate()\n    const { roomId } = useParams()\n\n    // Initialize socket connection only once\n    useEffect(() => {\n        if (!socketRef.current) {\n            socketRef.current = io(process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\", {\n                transports: ['websocket', 'polling'], // Fallback options\n                timeout: 5000,\n            })\n\n            // Set up connection event listeners\n            socketRef.current.on('connect', () => {\n                console.log('Connected to server:', socketRef.current.id)\n                setIsConnected(true)\n            })\n\n            socketRef.current.on('disconnect', (reason) => {\n                console.log('Disconnected from server:', reason)\n                setIsConnected(false)\n            })\n\n            socketRef.current.on('connect_error', (error) => {\n                console.error('Connection error:', error)\n                toast.error('Failed to connect to server')\n            })\n\n            // Set up room-related event listeners\n            socketRef.current.on('error', (error) => {\n                console.error('Socket error:', error)\n                toast.error(error.message || 'Socket error occurred')\n            })\n\n            socketRef.current.on('new member joined', ({ username }) => {\n                toast.success(`${username} joined the room`)\n            })\n\n            socketRef.current.on('member left', ({ username }) => {\n                toast.success(`${username} left the room`)\n            })\n        }\n\n        // Cleanup on unmount\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.disconnect()\n                socketRef.current = null\n            }\n        }\n    }, [])\n\n    // Handle room joining\n    useEffect(() => {\n        function kickStrangerOut() {\n            navigate(\"/\", { replace: true })\n            toast.error(\"No username provided\")\n        }\n\n        if (!location.state?.username) {\n            kickStrangerOut()\n            return\n        }\n\n        // Only join room when socket is connected\n        if (isConnected && socketRef.current && roomId) {\n            console.log(`Joining room: ${roomId} as ${location.state.username}`)\n            socketRef.current.emit(\"when a user joins\", { \n                roomId, \n                username: location.state.username \n            })\n        }\n    }, [isConnected, location.state, roomId, navigate])\n\n    // Handle page refresh/navigation cleanup\n    useEffect(() => {\n        const handleBeforeUnload = () => {\n            if (socketRef.current && roomId) {\n                socketRef.current.emit(\"leave room\", { roomId })\n            }\n        }\n\n        window.addEventListener('beforeunload', handleBeforeUnload)\n        \n        return () => {\n            window.removeEventListener('beforeunload', handleBeforeUnload)\n            if (socketRef.current && roomId) {\n                socketRef.current.emit(\"leave room\", { roomId })\n            }\n        }\n    }, [roomId])\n\n    if (!location.state?.username) {\n        return (\n            <div className=\"room\">\n                <h2>No username provided. Please use the form to join a room.</h2>\n            </div>\n        )\n    }\n\n    if (!isConnected) {\n        return (\n            <div className=\"room\">\n                <h2>Connecting to server...</h2>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {addPropsToChildren(children, { socket: socketRef.current })}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}