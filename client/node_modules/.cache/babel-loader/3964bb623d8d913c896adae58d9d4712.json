{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-css\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(_ref) {\n  _s();\n\n  var _location$state;\n\n  let {\n    socket,\n    isConnected,\n    username\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    roomId\n  } = useParams();\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(false);\n  const isInitializedRef = useRef(false);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\", \"css\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n  const currentUsername = username || ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username);\n  const onChange = useCallback(newValue => {\n    if (!socket || !isConnected) return;\n    setFetchedCode(newValue);\n    socket.emit(\"update code\", {\n      roomId,\n      code: newValue\n    });\n  }, [socket, roomId, isConnected]);\n  const handleLanguageChange = useCallback(e => {\n    if (!socket || !isConnected) return;\n    const newLanguage = e.target.value;\n    setLanguage(newLanguage);\n    socket.emit(\"update language\", {\n      roomId,\n      languageUsed: newLanguage\n    });\n  }, [socket, roomId, isConnected]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    if (!socket || !roomId) {\n      navigate('/', {\n        replace: true,\n        state: {}\n      });\n      return;\n    }\n\n    try {\n      console.log(\"Leaving room:\", roomId);\n      socket.emit(\"leave room\", {\n        roomId\n      }); // Small delay to ensure the leave event is processed\n\n      setTimeout(() => {\n        navigate('/', {\n          replace: true,\n          state: {}\n        });\n      }, 100);\n    } catch (error) {\n      console.error(\"Error leaving room:\", error);\n      navigate('/', {\n        replace: true,\n        state: {}\n      });\n    }\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async text => {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(text);\n        toast.success('Room ID copied to clipboard');\n      } else {\n        // Fallback for older browsers or non-HTTPS\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.position = 'fixed';\n        textArea.style.left = '-999999px';\n        textArea.style.top = '-999999px';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        const successful = document.execCommand('copy');\n        textArea.remove();\n\n        if (successful) {\n          toast.success('Room ID copied to clipboard');\n        } else {\n          throw new Error('Copy command failed');\n        }\n      }\n    } catch (error) {\n      console.error('Failed to copy room ID:', error);\n      toast.error('Failed to copy room ID');\n    }\n  }, []); // Initial setup and sync when room is ready\n\n  useEffect(() => {\n    if (!socket || !isConnected || isInitializedRef.current) return;\n    console.log(\"Initializing room, requesting sync...\"); // Request current state from server\n\n    socket.emit(\"syncing the code\", {\n      roomId\n    });\n    socket.emit(\"syncing the language\", {\n      roomId\n    });\n    isInitializedRef.current = true; // Set loading to false after a brief moment if no data comes\n\n    const loadingTimeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(loadingTimeout);\n  }, [socket, isConnected, roomId]); // Setup socket event listeners\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUpdateClientList = _ref2 => {\n      let {\n        userslist\n      } = _ref2;\n      console.log(\"Updated users list:\", userslist);\n      setFetchedUsers(Array.isArray(userslist) ? userslist : []);\n      setIsLoading(false);\n      setConnectionError(false);\n    };\n\n    const handleLanguageChange = _ref3 => {\n      let {\n        languageUsed\n      } = _ref3;\n      console.log(\"Language changed to:\", languageUsed);\n\n      if (languageUsed && languageUsed !== language) {\n        setLanguage(languageUsed);\n      }\n    };\n\n    const handleCodeChange = _ref4 => {\n      let {\n        code\n      } = _ref4;\n      console.log(\"Code updated, length:\", code ? code.length : 0);\n      setFetchedCode(code || \"\");\n    };\n\n    const handleNewMemberJoined = _ref5 => {\n      let {\n        username\n      } = _ref5;\n      console.log(`New member joined: ${username}`);\n      toast.success(`${username} joined the room`);\n    };\n\n    const handleMemberLeft = _ref6 => {\n      let {\n        username\n      } = _ref6;\n      console.log(`Member left: ${username}`);\n      toast(`${username} left the room`, {\n        icon: '👋',\n        style: {\n          background: '#363636',\n          color: '#fff'\n        }\n      });\n    };\n\n    const handleSocketError = error => {\n      console.error(\"Socket error:\", error);\n      setConnectionError(true);\n      toast.error(error.message || \"Connection error occurred\");\n    };\n\n    const handleDisconnect = reason => {\n      console.log(\"Socket disconnected:\", reason);\n      setConnectionError(true);\n      setIsLoading(false);\n\n      if (reason === 'io server disconnect') {\n        toast.error(\"Server disconnected. Trying to reconnect...\");\n      } else {\n        toast.error(\"Disconnected from server\");\n      }\n    };\n\n    const handleConnect = () => {\n      console.log(\"Socket reconnected\");\n      setConnectionError(false);\n      toast.success(\"Reconnected to server\"); // Re-sync when reconnected\n\n      if (roomId && currentUsername) {\n        setTimeout(() => {\n          socket.emit(\"when a user joins\", {\n            roomId,\n            username: currentUsername\n          });\n        }, 100);\n      }\n    };\n\n    const handleConnectError = error => {\n      console.error(\"Connection error:\", error);\n      setConnectionError(true);\n      setIsLoading(false);\n    }; // Add event listeners\n\n\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    socket.on(\"new member joined\", handleNewMemberJoined);\n    socket.on(\"member left\", handleMemberLeft);\n    socket.on(\"error\", handleSocketError);\n    socket.on(\"disconnect\", handleDisconnect);\n    socket.on(\"connect\", handleConnect);\n    socket.on(\"connect_error\", handleConnectError); // Cleanup function to remove event listeners\n\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n      socket.off(\"new member joined\", handleNewMemberJoined);\n      socket.off(\"member left\", handleMemberLeft);\n      socket.off(\"error\", handleSocketError);\n      socket.off(\"disconnect\", handleDisconnect);\n      socket.off(\"connect\", handleConnect);\n      socket.off(\"connect_error\", handleConnectError);\n    };\n  }, [socket, language, roomId, currentUsername]); // Handle browser back button and page refresh\n\n  useEffect(() => {\n    const handlePopState = e => {\n      handleLeave();\n    };\n\n    const handleBeforeUnload = e => {\n      if (socket && roomId) {\n        socket.emit(\"leave room\", {\n          roomId\n        });\n      }\n    };\n\n    window.addEventListener(\"popstate\", handlePopState);\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [handleLeave, socket, roomId]); // Redirect if no username\n\n  useEffect(() => {\n    if (!currentUsername) {\n      console.log(\"No username found, redirecting to home\");\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [currentUsername, navigate]);\n\n  if (!socket) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectionStatus error\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u274C Connection Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Unable to establish connection to the server.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roomSidebarBtn\",\n            onClick: () => navigate('/'),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectionStatus\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDD04 Connecting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait while we connect to the server.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomId ? roomId.substring(0, 8) + '...' : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), currentUsername && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"currentUser\",\n          children: [\"\\uD83D\\uDC64 \", currentUsername]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectionStatus error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u26A0\\uFE0F Connection Issues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarUsersWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"fieldLabel\",\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"language\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            disabled: isLoading || !isConnected,\n            children: languagesAvailable.map(eachLanguage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachLanguage,\n              children: eachLanguage\n            }, eachLanguage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"codeKeybinding\",\n            className: \"fieldLabel\",\n            children: \"Keybinding:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"codeKeybinding\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(eachKeybinding => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachKeybinding,\n              children: eachKeybinding\n            }, eachKeybinding, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"usersTitle\",\n            children: [\"Connected Users \", isLoading ? \"(Loading...)\" : `(${fetchedUsers.length})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsers\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach loading\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: \"\\uD83D\\uDD04 Loading users...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this) : fetchedUsers.length > 0 ? fetchedUsers.map((each, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachAvatar\",\n                style: {\n                  backgroundColor: generateColor(each)\n                },\n                children: each.slice(0, 2).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: [each, each === currentUsername && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"youLabel\",\n                  children: \" (You)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, `${each}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach empty\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: connectionError ? \"❌ Connection error\" : \"👥 No users visible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarCopyBtn\",\n          onClick: () => copyToClipboard(roomId),\n          disabled: !roomId,\n          title: \"Copy Room ID to share with others\",\n          children: \"\\uD83D\\uDCCB Copy Room ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: handleLeave,\n          title: \"Leave this room\",\n          children: \"\\uD83D\\uDEAA Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorSection\",\n      children: [!isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorOverlay\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u26A0\\uFE0F Editor disabled - Connection lost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        placeholder: isLoading ? \"Loading editor...\" : \"Write your code here...\",\n        className: \"roomCodeEditor\",\n        mode: language,\n        keyboardHandler: codeKeybinding,\n        theme: \"monokai\",\n        name: \"collabEditor\",\n        width: \"auto\",\n        height: \"auto\",\n        value: fetchedCode,\n        onChange: onChange,\n        fontSize: 15,\n        showPrintMargin: true,\n        showGutter: true,\n        highlightActiveLine: true,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        wrapEnabled: true,\n        tabSize: 2,\n        readOnly: isLoading || !isConnected,\n        editorProps: {\n          $blockScrolling: true\n        },\n        setOptions: {\n          showLineNumbers: true,\n          showFoldWidgets: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      toastOptions: {\n        duration: 3000,\n        style: {\n          background: '#363636',\n          color: '#fff',\n          fontSize: '14px'\n        },\n        success: {\n          iconTheme: {\n            primary: '#4aed88'\n          }\n        },\n        error: {\n          iconTheme: {\n            primary: '#ff6b6b'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"XzsPIwGGJMOWRexxQBPp//iGXeU=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","AceEditor","Toaster","toast","useNavigate","useParams","useLocation","generateColor","Room","socket","isConnected","username","navigate","location","roomId","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","isLoading","setIsLoading","connectionError","setConnectionError","isInitializedRef","languagesAvailable","codeKeybindingsAvailable","currentUsername","state","onChange","newValue","emit","code","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","replace","console","log","setTimeout","error","copyToClipboard","text","navigator","clipboard","window","isSecureContext","writeText","success","textArea","document","createElement","style","position","left","top","body","appendChild","focus","select","successful","execCommand","remove","Error","current","loadingTimeout","clearTimeout","handleUpdateClientList","userslist","Array","isArray","handleCodeChange","length","handleNewMemberJoined","handleMemberLeft","icon","background","color","handleSocketError","message","handleDisconnect","reason","handleConnect","handleConnectError","on","off","handlePopState","handleBeforeUnload","addEventListener","removeEventListener","substring","map","eachLanguage","eachKeybinding","each","index","backgroundColor","slice","toUpperCase","$blockScrolling","showLineNumbers","showFoldWidgets","duration","fontSize","iconTheme","primary"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css'\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-yaml\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/mode-css\";\r\n\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room({ socket, isConnected, username }) {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { roomId } = useParams()\r\n  const [fetchedUsers, setFetchedUsers] = useState([])\r\n  const [fetchedCode, setFetchedCode] = useState(\"\")\r\n  const [language, setLanguage] = useState(\"javascript\")\r\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [connectionError, setConnectionError] = useState(false)\r\n  const isInitializedRef = useRef(false)\r\n\r\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\", \"css\"]\r\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"]\r\n\r\n  const currentUsername = username || location.state?.username\r\n\r\n  const onChange = useCallback((newValue) => {\r\n    if (!socket || !isConnected) return\r\n    \r\n    setFetchedCode(newValue)\r\n    socket.emit(\"update code\", { roomId, code: newValue })\r\n  }, [socket, roomId, isConnected])\r\n\r\n  const handleLanguageChange = useCallback((e) => {\r\n    if (!socket || !isConnected) return\r\n    \r\n    const newLanguage = e.target.value\r\n    setLanguage(newLanguage)\r\n    socket.emit(\"update language\", { roomId, languageUsed: newLanguage })\r\n  }, [socket, roomId, isConnected])\r\n\r\n  const handleCodeKeybindingChange = useCallback((e) => {\r\n    const value = e.target.value\r\n    setCodeKeybinding(value === \"default\" ? undefined : value)\r\n  }, [])\r\n\r\n  const handleLeave = useCallback(() => {\r\n    if (!socket || !roomId) {\r\n      navigate('/', { replace: true, state: {} })\r\n      return\r\n    }\r\n    \r\n    try {\r\n      console.log(\"Leaving room:\", roomId)\r\n      socket.emit(\"leave room\", { roomId })\r\n      \r\n      // Small delay to ensure the leave event is processed\r\n      setTimeout(() => {\r\n        navigate('/', { replace: true, state: {} })\r\n      }, 100)\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error leaving room:\", error)\r\n      navigate('/', { replace: true, state: {} })\r\n    }\r\n  }, [socket, roomId, navigate])\r\n\r\n  const copyToClipboard = useCallback(async (text) => {\r\n    try {\r\n      if (navigator.clipboard && window.isSecureContext) {\r\n        await navigator.clipboard.writeText(text)\r\n        toast.success('Room ID copied to clipboard')\r\n      } else {\r\n        // Fallback for older browsers or non-HTTPS\r\n        const textArea = document.createElement('textarea')\r\n        textArea.value = text\r\n        textArea.style.position = 'fixed'\r\n        textArea.style.left = '-999999px'\r\n        textArea.style.top = '-999999px'\r\n        document.body.appendChild(textArea)\r\n        textArea.focus()\r\n        textArea.select()\r\n        const successful = document.execCommand('copy')\r\n        textArea.remove()\r\n        if (successful) {\r\n          toast.success('Room ID copied to clipboard')\r\n        } else {\r\n          throw new Error('Copy command failed')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to copy room ID:', error)\r\n      toast.error('Failed to copy room ID')\r\n    }\r\n  }, [])\r\n\r\n  // Initial setup and sync when room is ready\r\n  useEffect(() => {\r\n    if (!socket || !isConnected || isInitializedRef.current) return\r\n\r\n    console.log(\"Initializing room, requesting sync...\")\r\n    \r\n    // Request current state from server\r\n    socket.emit(\"syncing the code\", { roomId })\r\n    socket.emit(\"syncing the language\", { roomId })\r\n    \r\n    isInitializedRef.current = true\r\n    \r\n    // Set loading to false after a brief moment if no data comes\r\n    const loadingTimeout = setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 2000)\r\n\r\n    return () => clearTimeout(loadingTimeout)\r\n  }, [socket, isConnected, roomId])\r\n\r\n  // Setup socket event listeners\r\n  useEffect(() => {\r\n    if (!socket) return\r\n\r\n    const handleUpdateClientList = ({ userslist }) => {\r\n      console.log(\"Updated users list:\", userslist)\r\n      setFetchedUsers(Array.isArray(userslist) ? userslist : [])\r\n      setIsLoading(false)\r\n      setConnectionError(false)\r\n    }\r\n\r\n    const handleLanguageChange = ({ languageUsed }) => {\r\n      console.log(\"Language changed to:\", languageUsed)\r\n      if (languageUsed && languageUsed !== language) {\r\n        setLanguage(languageUsed)\r\n      }\r\n    }\r\n\r\n    const handleCodeChange = ({ code }) => {\r\n      console.log(\"Code updated, length:\", code ? code.length : 0)\r\n      setFetchedCode(code || \"\")\r\n    }\r\n\r\n    const handleNewMemberJoined = ({ username }) => {\r\n      console.log(`New member joined: ${username}`)\r\n      toast.success(`${username} joined the room`)\r\n    }\r\n\r\n    const handleMemberLeft = ({ username }) => {\r\n      console.log(`Member left: ${username}`)\r\n      toast(`${username} left the room`, {\r\n        icon: '👋',\r\n        style: {\r\n          background: '#363636',\r\n          color: '#fff',\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleSocketError = (error) => {\r\n      console.error(\"Socket error:\", error)\r\n      setConnectionError(true)\r\n      toast.error(error.message || \"Connection error occurred\")\r\n    }\r\n\r\n    const handleDisconnect = (reason) => {\r\n      console.log(\"Socket disconnected:\", reason)\r\n      setConnectionError(true)\r\n      setIsLoading(false)\r\n      \r\n      if (reason === 'io server disconnect') {\r\n        toast.error(\"Server disconnected. Trying to reconnect...\")\r\n      } else {\r\n        toast.error(\"Disconnected from server\")\r\n      }\r\n    }\r\n\r\n    const handleConnect = () => {\r\n      console.log(\"Socket reconnected\")\r\n      setConnectionError(false)\r\n      toast.success(\"Reconnected to server\")\r\n      \r\n      // Re-sync when reconnected\r\n      if (roomId && currentUsername) {\r\n        setTimeout(() => {\r\n          socket.emit(\"when a user joins\", { \r\n            roomId, \r\n            username: currentUsername \r\n          })\r\n        }, 100)\r\n      }\r\n    }\r\n\r\n    const handleConnectError = (error) => {\r\n      console.error(\"Connection error:\", error)\r\n      setConnectionError(true)\r\n      setIsLoading(false)\r\n    }\r\n\r\n    // Add event listeners\r\n    socket.on(\"updating client list\", handleUpdateClientList)\r\n    socket.on(\"on language change\", handleLanguageChange)\r\n    socket.on(\"on code change\", handleCodeChange)\r\n    socket.on(\"new member joined\", handleNewMemberJoined)\r\n    socket.on(\"member left\", handleMemberLeft)\r\n    socket.on(\"error\", handleSocketError)\r\n    socket.on(\"disconnect\", handleDisconnect)\r\n    socket.on(\"connect\", handleConnect)\r\n    socket.on(\"connect_error\", handleConnectError)\r\n\r\n    // Cleanup function to remove event listeners\r\n    return () => {\r\n      socket.off(\"updating client list\", handleUpdateClientList)\r\n      socket.off(\"on language change\", handleLanguageChange)\r\n      socket.off(\"on code change\", handleCodeChange)\r\n      socket.off(\"new member joined\", handleNewMemberJoined)\r\n      socket.off(\"member left\", handleMemberLeft)\r\n      socket.off(\"error\", handleSocketError)\r\n      socket.off(\"disconnect\", handleDisconnect)\r\n      socket.off(\"connect\", handleConnect)\r\n      socket.off(\"connect_error\", handleConnectError)\r\n    }\r\n  }, [socket, language, roomId, currentUsername])\r\n\r\n  // Handle browser back button and page refresh\r\n  useEffect(() => {\r\n    const handlePopState = (e) => {\r\n      handleLeave()\r\n    }\r\n\r\n    const handleBeforeUnload = (e) => {\r\n      if (socket && roomId) {\r\n        socket.emit(\"leave room\", { roomId })\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"popstate\", handlePopState)\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", handlePopState)\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload)\r\n    }\r\n  }, [handleLeave, socket, roomId])\r\n\r\n  // Redirect if no username\r\n  useEffect(() => {\r\n    if (!currentUsername) {\r\n      console.log(\"No username found, redirecting to home\")\r\n      navigate('/', { replace: true })\r\n    }\r\n  }, [currentUsername, navigate])\r\n\r\n  if (!socket) {\r\n    return (\r\n      <div className=\"room\">\r\n        <div className=\"roomSidebar\">\r\n          <div className=\"connectionStatus error\">\r\n            <p>❌ Connection Error</p>\r\n            <p>Unable to establish connection to the server.</p>\r\n            <button className=\"roomSidebarBtn\" onClick={() => navigate('/')}>\r\n              Go Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"room\">\r\n        <div className=\"roomSidebar\">\r\n          <div className=\"connectionStatus\">\r\n            <p>🔄 Connecting...</p>\r\n            <p>Please wait while we connect to the server.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"room\">\r\n      <div className=\"roomSidebar\">\r\n        <div className=\"roomSidebarHeader\">\r\n          <h3>Room: {roomId ? roomId.substring(0, 8) + '...' : 'Unknown'}</h3>\r\n          {currentUsername && (\r\n            <p className=\"currentUser\">👤 {currentUsername}</p>\r\n          )}\r\n          {connectionError && (\r\n            <div className=\"connectionStatus error\">\r\n              <p>⚠️ Connection Issues</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"roomSidebarUsersWrapper\">\r\n          <div className=\"languageFieldWrapper\">\r\n            <label htmlFor=\"language\" className=\"fieldLabel\">Language:</label>\r\n            <select \r\n              className=\"languageField\" \r\n              name=\"language\" \r\n              id=\"language\" \r\n              value={language} \r\n              onChange={handleLanguageChange}\r\n              disabled={isLoading || !isConnected}\r\n            >\r\n              {languagesAvailable.map(eachLanguage => (\r\n                <option key={eachLanguage} value={eachLanguage}>\r\n                  {eachLanguage}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"languageFieldWrapper\">\r\n            <label htmlFor=\"codeKeybinding\" className=\"fieldLabel\">Keybinding:</label>\r\n            <select \r\n              className=\"languageField\" \r\n              name=\"codeKeybinding\" \r\n              id=\"codeKeybinding\" \r\n              value={codeKeybinding || \"default\"} \r\n              onChange={handleCodeKeybindingChange}\r\n            >\r\n              {codeKeybindingsAvailable.map(eachKeybinding => (\r\n                <option key={eachKeybinding} value={eachKeybinding}>\r\n                  {eachKeybinding}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"usersSection\">\r\n            <p className=\"usersTitle\">\r\n              Connected Users {isLoading ? \"(Loading...)\" : `(${fetchedUsers.length})`}\r\n            </p>\r\n            <div className=\"roomSidebarUsers\">\r\n              {isLoading ? (\r\n                <div className=\"roomSidebarUsersEach loading\">\r\n                  <div className=\"roomSidebarUsersEachName\">🔄 Loading users...</div>\r\n                </div>\r\n              ) : fetchedUsers.length > 0 ? (\r\n                fetchedUsers.map((each, index) => (\r\n                  <div key={`${each}-${index}`} className=\"roomSidebarUsersEach\">\r\n                    <div \r\n                      className=\"roomSidebarUsersEachAvatar\" \r\n                      style={{ backgroundColor: generateColor(each) }}\r\n                    >\r\n                      {each.slice(0, 2).toUpperCase()}\r\n                    </div>\r\n                    <div className=\"roomSidebarUsersEachName\">\r\n                      {each}\r\n                      {each === currentUsername && <span className=\"youLabel\"> (You)</span>}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"roomSidebarUsersEach empty\">\r\n                  <div className=\"roomSidebarUsersEachName\">\r\n                    {connectionError ? \"❌ Connection error\" : \"👥 No users visible\"}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"roomSidebarActions\">\r\n          <button \r\n            className=\"roomSidebarCopyBtn\" \r\n            onClick={() => copyToClipboard(roomId)}\r\n            disabled={!roomId}\r\n            title=\"Copy Room ID to share with others\"\r\n          >\r\n            📋 Copy Room ID\r\n          </button>\r\n          <button \r\n            className=\"roomSidebarBtn\" \r\n            onClick={handleLeave}\r\n            title=\"Leave this room\"\r\n          >\r\n            🚪 Leave Room\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editorSection\">\r\n        {!isConnected && (\r\n          <div className=\"editorOverlay\">\r\n            <p>⚠️ Editor disabled - Connection lost</p>\r\n          </div>\r\n        )}\r\n        <AceEditor\r\n          placeholder={isLoading ? \"Loading editor...\" : \"Write your code here...\"}\r\n          className=\"roomCodeEditor\"\r\n          mode={language}\r\n          keyboardHandler={codeKeybinding}\r\n          theme=\"monokai\"\r\n          name=\"collabEditor\"\r\n          width=\"auto\"\r\n          height=\"auto\"\r\n          value={fetchedCode}\r\n          onChange={onChange}\r\n          fontSize={15}\r\n          showPrintMargin={true}\r\n          showGutter={true}\r\n          highlightActiveLine={true}\r\n          enableLiveAutocompletion={true}\r\n          enableBasicAutocompletion={true}\r\n          enableSnippets={true}\r\n          wrapEnabled={true}\r\n          tabSize={2}\r\n          readOnly={isLoading || !isConnected}\r\n          editorProps={{\r\n            $blockScrolling: true\r\n          }}\r\n          setOptions={{\r\n            showLineNumbers: true,\r\n            showFoldWidgets: true,\r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      <Toaster \r\n        position=\"top-right\"\r\n        toastOptions={{\r\n          duration: 3000,\r\n          style: {\r\n            background: '#363636',\r\n            color: '#fff',\r\n            fontSize: '14px',\r\n          },\r\n          success: {\r\n            iconTheme: {\r\n              primary: '#4aed88',\r\n            },\r\n          },\r\n          error: {\r\n            iconTheme: {\r\n              primary: '#ff6b6b',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}