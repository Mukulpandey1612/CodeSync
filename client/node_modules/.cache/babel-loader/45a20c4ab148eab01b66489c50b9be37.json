{"ast":null,"code":"ace.define(\"ace/mode/python_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /*\n  * TODO: python delimiters\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PythonHighlightRules = function () {\n    var keywords = \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" + \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" + \"raise|return|try|while|with|yield|async|await|nonlocal\";\n    var builtinConstants = \"True|False|None|NotImplemented|Ellipsis|__debug__\";\n    var builtinFunctions = \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" + \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" + \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" + \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" + \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" + \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" + \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" + \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" + \"ascii|breakpoint|bytes\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"variable.language\": \"self|cls\",\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        regex: strPre + '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        regex: strPre + '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: strPre + \"'{3}\",\n        next: \"qstring3\"\n      }, {\n        token: \"string\",\n        regex: strPre + \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"{3}',\n        next: \"rawqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"(?=.)',\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'{3}\",\n        next: \"rawqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'(?=.)\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"{3}',\n        next: \"fqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"(?=.)',\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'{3}\",\n        next: \"fqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'(?=.)\",\n        next: \"fqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"{3}',\n        next: \"rfqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"(?=.)',\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'{3}\",\n        next: \"rfqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'(?=.)\",\n        next: \"rfqstring\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"punctuation\",\n        regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: \"(def|class)(\\\\s+)([\\\\u00BF-\\\\u1FFF\\\\u2C00-\\\\uD7FF\\\\w]+)\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        include: \"constants\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring3\": [{\n        token: \"string\",\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring3\": [{\n        token: \"string\",\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring3\": [{\n        token: \"string\",\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring3\": [{\n        token: \"string\",\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring\": [{\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstringParRules\": [{\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)]\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"string\",\n        regex: \"'[^']*'\"\n      }, {\n        token: \"string\",\n        regex: '\"[^\"]*\"'\n      }, {\n        token: \"function.support\",\n        regex: \"(!s|!r|!a)\"\n      }, {\n        include: \"constants\"\n      }, {\n        token: 'paren.rparen',\n        regex: \"}\",\n        next: 'pop'\n      }, {\n        token: 'paren.lparen',\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        regex: integer + \"\\\\b\"\n      }, {\n        token: [\"punctuation\", \"function.support\"],\n        regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(PythonHighlightRules, TextHighlightRules);\n  exports.PythonHighlightRules = PythonHighlightRules;\n});\nace.define(\"ace/mode/folding/pythonic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, match.index);\n        if (match[2]) return this.indentationBlock(session, row, match.index + match[2].length);\n        return this.indentationBlock(session, row);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/python\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/python_highlight_rules\", \"ace/mode/folding/pythonic\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\n\n  var PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = PythonHighlightRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$pairQuotesAfter = {\n      \"'\": /[ruf]/i,\n      '\"': /[ruf]/i\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    var outdents = {\n      \"pass\": 1,\n      \"return\": 1,\n      \"raise\": 1,\n      \"break\": 1,\n      \"continue\": 1\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens) return false;\n\n      do {\n        var last = tokens.pop();\n      } while (last && (last.type == \"comment\" || last.type == \"text\" && last.value.match(/^\\s+$/)));\n\n      if (!last) return false;\n      return last.type == \"keyword\" && outdents[last.value];\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      row += 1;\n      var indent = this.$getIndent(doc.getLine(row));\n      var tab = doc.getTabString();\n      if (indent.slice(-tab.length) == tab) doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/python\";\n    this.snippetFileId = \"ace/snippets/python\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/python\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","PythonHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","strPre","strRawPre","strFormatPre","strRawFormatPre","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","stringEscape","$rules","token","regex","next","include","defaultToken","push","normalizeRules","inherits","BaseFoldMode","FoldMode","markers","foldingStartMarker","RegExp","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","openingBracketBlock","index","indentationBlock","length","call","prototype","TextMode","Mode","PythonFoldMode","Range","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$pairQuotesAfter","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","type","outdents","checkOutdent","input","trim","last","pop","value","autoOutdent","doc","getTabString","slice","remove","$id","snippetFileId","m"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/node_modules/ace-builds/src-noconflict/mode-python.js"],"sourcesContent":["ace.define(\"ace/mode/python_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n * TODO: python delimiters\n */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PythonHighlightRules = function () {\n    var keywords = (\"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\n        \"raise|return|try|while|with|yield|async|await|nonlocal\");\n    var builtinConstants = (\"True|False|None|NotImplemented|Ellipsis|__debug__\");\n    var builtinFunctions = (\"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\n        \"ascii|breakpoint|bytes\");\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"variable.language\": \"self|cls\",\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n        \"start\": [{\n                token: \"comment\",\n                regex: \"#.*$\"\n            }, {\n                token: \"string\",\n                regex: strPre + '\"{3}',\n                next: \"qqstring3\"\n            }, {\n                token: \"string\",\n                regex: strPre + '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"string\",\n                regex: strPre + \"'{3}\",\n                next: \"qstring3\"\n            }, {\n                token: \"string\",\n                regex: strPre + \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + '\"{3}',\n                next: \"rawqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + '\"(?=.)',\n                next: \"rawqqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + \"'{3}\",\n                next: \"rawqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + \"'(?=.)\",\n                next: \"rawqstring\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + '\"{3}',\n                next: \"fqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + '\"(?=.)',\n                next: \"fqqstring\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + \"'{3}\",\n                next: \"fqstring3\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + \"'(?=.)\",\n                next: \"fqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + '\"{3}',\n                next: \"rfqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + '\"(?=.)',\n                next: \"rfqqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + \"'{3}\",\n                next: \"rfqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + \"'(?=.)\",\n                next: \"rfqstring\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n            }, {\n                token: \"punctuation\",\n                regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(\\\\{]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)\\\\}]\"\n            }, {\n                token: [\"keyword\", \"text\", \"entity.name.function\"],\n                regex: \"(def|class)(\\\\s+)([\\\\u00BF-\\\\u1FFF\\\\u2C00-\\\\uD7FF\\\\w]+)\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                include: \"constants\"\n            }],\n        \"qqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqqstring3\": [{\n                token: \"string\",\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqstring3\": [{\n                token: \"string\",\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rawqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rawqstring\"\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"fqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqqstring3\": [{\n                token: \"string\",\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqstring3\": [{\n                token: \"string\",\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rfqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqstring\": [{\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstringParRules\": [{\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)]\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"string\",\n                regex: \"'[^']*'\"\n            }, {\n                token: \"string\",\n                regex: '\"[^\"]*\"'\n            }, {\n                token: \"function.support\",\n                regex: \"(!s|!r|!a)\"\n            }, {\n                include: \"constants\"\n            }, {\n                token: 'paren.rparen',\n                regex: \"}\",\n                next: 'pop'\n            }, {\n                token: 'paren.lparen',\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }],\n        \"constants\": [{\n                token: \"constant.numeric\",\n                regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n            }, {\n                token: \"constant.numeric\",\n                regex: floatNumber\n            }, {\n                token: \"constant.numeric\",\n                regex: integer + \"[lL]\\\\b\"\n            }, {\n                token: \"constant.numeric\",\n                regex: integer + \"\\\\b\"\n            }, {\n                token: [\"punctuation\", \"function.support\"],\n                regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(PythonHighlightRules, TextHighlightRules);\nexports.PythonHighlightRules = PythonHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, match.index);\n            if (match[2])\n                return this.indentationBlock(session, row, match.index + match[2].length);\n            return this.indentationBlock(session, row);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/python\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/python_highlight_rules\",\"ace/mode/folding/pythonic\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\nvar PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar Mode = function () {\n    this.HighlightRules = PythonHighlightRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$pairQuotesAfter = {\n        \"'\": /[ruf]/i,\n        '\"': /[ruf]/i\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n        if (!last)\n            return false;\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n    this.$id = \"ace/mode/python\";\n    this.snippetFileId = \"ace/snippets/python\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/python\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}