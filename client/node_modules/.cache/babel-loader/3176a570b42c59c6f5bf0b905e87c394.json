{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css'; // Import necessary modes, themes, and extensions for Ace Editor\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-css\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(_ref) {\n  _s();\n\n  var _location$state;\n\n  let {\n    socket,\n    isConnected,\n    username\n  } = _ref;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    roomId\n  } = useParams();\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(false);\n  const isInitializedRef = useRef(false);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\", \"css\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n  const currentUsername = username || ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username);\n  const onChange = useCallback(newValue => {\n    if (!socket || !isConnected) return;\n    setFetchedCode(newValue);\n    socket.emit(\"update code\", {\n      roomId,\n      code: newValue\n    });\n  }, [socket, roomId, isConnected]);\n  const handleLanguageChange = useCallback(e => {\n    if (!socket || !isConnected) return;\n    const newLanguage = e.target.value;\n    setLanguage(newLanguage);\n    socket.emit(\"update language\", {\n      roomId,\n      languageUsed: newLanguage\n    });\n  }, [socket, roomId, isConnected]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    if (!socket || !roomId) {\n      navigate('/', {\n        replace: true,\n        state: {}\n      });\n      return;\n    }\n\n    try {\n      socket.emit(\"leave room\", {\n        roomId\n      });\n      setTimeout(() => {\n        navigate('/', {\n          replace: true,\n          state: {}\n        });\n      }, 100);\n    } catch (error) {\n      console.error(\"Error leaving room:\", error);\n      navigate('/', {\n        replace: true,\n        state: {}\n      });\n    }\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async text => {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(text);\n        toast.success('Room ID copied to clipboard');\n      } else {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.position = 'fixed';\n        textArea.style.left = '-999999px';\n        textArea.style.top = '-999999px';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        document.execCommand('copy');\n        textArea.remove();\n        toast.success('Room ID copied to clipboard');\n      }\n    } catch (error) {\n      console.error('Failed to copy room ID:', error);\n      toast.error('Failed to copy room ID');\n    }\n  }, []); // **CHANGED**: This new useEffect is now responsible for joining the room\n  // It runs once when the component is ready.\n\n  useEffect(() => {\n    if (socket && isConnected && currentUsername && !isInitializedRef.current) {\n      console.log(`Joining room as \"${currentUsername}\"`);\n      socket.emit(\"when a user joins\", {\n        roomId,\n        username: currentUsername\n      });\n      isInitializedRef.current = true;\n    }\n  }, [socket, isConnected, currentUsername, roomId]); // Setup socket event listeners\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUpdateClientList = _ref2 => {\n      let {\n        userslist\n      } = _ref2;\n      console.log(\"Updated users list:\", userslist);\n      setFetchedUsers(Array.isArray(userslist) ? userslist : []);\n      setIsLoading(false);\n      setConnectionError(false);\n    };\n\n    const handleLanguageChange = _ref3 => {\n      let {\n        languageUsed\n      } = _ref3;\n      console.log(\"Language changed to:\", languageUsed);\n\n      if (languageUsed && languageUsed !== language) {\n        setLanguage(languageUsed);\n      }\n    };\n\n    const handleCodeChange = _ref4 => {\n      let {\n        code\n      } = _ref4;\n      console.log(\"Code updated, length:\", code ? code.length : 0);\n      setFetchedCode(code || \"\");\n    };\n\n    const handleNewMemberJoined = _ref5 => {\n      let {\n        username\n      } = _ref5;\n      console.log(`New member joined: ${username}`);\n      toast.success(`${username} joined the room`);\n    };\n\n    const handleMemberLeft = _ref6 => {\n      let {\n        username\n      } = _ref6;\n      console.log(`Member left: ${username}`);\n      toast(`${username} left the room`, {\n        icon: 'ðŸ‘‹'\n      });\n    };\n\n    const handleSocketError = error => {\n      console.error(\"Socket error:\", error);\n      setConnectionError(true);\n      toast.error(error.message || \"Connection error occurred\");\n    };\n\n    const handleDisconnect = reason => {\n      console.log(\"Socket disconnected:\", reason);\n      setConnectionError(true);\n      setIsLoading(false);\n      toast.error(\"Disconnected from server\");\n    };\n\n    const handleConnect = () => {\n      console.log(\"Socket reconnected\");\n      setConnectionError(false);\n      toast.success(\"Reconnected to server\");\n\n      if (roomId && currentUsername) {\n        setTimeout(() => {\n          socket.emit(\"when a user joins\", {\n            roomId,\n            username: currentUsername\n          });\n        }, 100);\n      }\n    };\n\n    const handleConnectError = error => {\n      console.error(\"Connection error:\", error);\n      setConnectionError(true);\n      setIsLoading(false);\n    };\n\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    socket.on(\"new member joined\", handleNewMemberJoined);\n    socket.on(\"member left\", handleMemberLeft);\n    socket.on(\"error\", handleSocketError);\n    socket.on(\"disconnect\", handleDisconnect);\n    socket.on(\"connect\", handleConnect);\n    socket.on(\"connect_error\", handleConnectError);\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n      socket.off(\"new member joined\", handleNewMemberJoined);\n      socket.off(\"member left\", handleMemberLeft);\n      socket.off(\"error\", handleSocketError);\n      socket.off(\"disconnect\", handleDisconnect);\n      socket.off(\"connect\", handleConnect);\n      socket.off(\"connect_error\", handleConnectError);\n    };\n  }, [socket, language, roomId, currentUsername]); // Handle browser back button and page refresh\n\n  useEffect(() => {\n    const handlePopState = e => {\n      handleLeave();\n    };\n\n    const handleBeforeUnload = e => {\n      if (socket && roomId) {\n        socket.emit(\"leave room\", {\n          roomId\n        });\n      }\n    };\n\n    window.addEventListener(\"popstate\", handlePopState);\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState);\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [handleLeave, socket, roomId]); // Redirect if no username\n\n  useEffect(() => {\n    if (!currentUsername) {\n      console.log(\"No username found, redirecting to home\");\n      navigate('/', {\n        replace: true\n      });\n    }\n  }, [currentUsername, navigate]);\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connectionStatus\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDD04 Connecting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this);\n  } // --- JSX for the component ---\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomId ? roomId.substring(0, 8) + '...' : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), currentUsername && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"currentUser\",\n          children: [\"\\uD83D\\uDC64 \", currentUsername]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarUsersWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"fieldLabel\",\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"language\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            disabled: !isConnected,\n            children: languagesAvailable.map(eachLanguage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachLanguage,\n              children: eachLanguage\n            }, eachLanguage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"codeKeybinding\",\n            className: \"fieldLabel\",\n            children: \"Keybinding:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"codeKeybinding\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(eachKeybinding => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachKeybinding,\n              children: eachKeybinding\n            }, eachKeybinding, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"usersTitle\",\n            children: [\"Connected Users \", isLoading ? \"(...)\" : `(${fetchedUsers.length})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsers\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachName\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this) : fetchedUsers.map((each, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachAvatar\",\n                style: {\n                  backgroundColor: generateColor(each)\n                },\n                children: each.slice(0, 2).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: [each, each === currentUsername && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"youLabel\",\n                  children: \" (You)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, this)]\n            }, `${each}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarCopyBtn\",\n          onClick: () => copyToClipboard(roomId),\n          children: \"\\uD83D\\uDCCB Copy Room ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: handleLeave,\n          children: \"\\uD83D\\uDEAA Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorSection\",\n      children: /*#__PURE__*/_jsxDEV(AceEditor, {\n        className: \"roomCodeEditor\",\n        mode: language,\n        keyboardHandler: codeKeybinding,\n        theme: \"monokai\",\n        name: \"collabEditor\",\n        width: \"auto\",\n        height: \"auto\",\n        value: fetchedCode,\n        onChange: onChange,\n        fontSize: 15,\n        readOnly: !isConnected,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true,\n        editorProps: {\n          $blockScrolling: true\n        },\n        setOptions: {\n          showLineNumbers: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"XzsPIwGGJMOWRexxQBPp//iGXeU=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","AceEditor","Toaster","toast","useNavigate","useParams","useLocation","generateColor","Room","socket","isConnected","username","navigate","location","roomId","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","isLoading","setIsLoading","connectionError","setConnectionError","isInitializedRef","languagesAvailable","codeKeybindingsAvailable","currentUsername","state","onChange","newValue","emit","code","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","replace","setTimeout","error","console","copyToClipboard","text","navigator","clipboard","window","isSecureContext","writeText","success","textArea","document","createElement","style","position","left","top","body","appendChild","focus","select","execCommand","remove","current","log","handleUpdateClientList","userslist","Array","isArray","handleCodeChange","length","handleNewMemberJoined","handleMemberLeft","icon","handleSocketError","message","handleDisconnect","reason","handleConnect","handleConnectError","on","off","handlePopState","handleBeforeUnload","addEventListener","removeEventListener","substring","map","eachLanguage","eachKeybinding","each","index","backgroundColor","slice","toUpperCase","$blockScrolling","showLineNumbers"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css'\r\n\r\n// Import necessary modes, themes, and extensions for Ace Editor\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-yaml\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/mode-css\";\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\nimport \"ace-builds/src-noconflict/theme-monai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room({ socket, isConnected, username }) {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { roomId } = useParams();\r\n    const [fetchedUsers, setFetchedUsers] = useState([]);\r\n    const [fetchedCode, setFetchedCode] = useState(\"\");\r\n    const [language, setLanguage] = useState(\"javascript\");\r\n    const [codeKeybinding, setCodeKeybinding] = useState(undefined);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [connectionError, setConnectionError] = useState(false);\r\n    const isInitializedRef = useRef(false);\r\n\r\n    const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\", \"css\"];\r\n    const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\r\n\r\n    const currentUsername = username || location.state?.username;\r\n\r\n    const onChange = useCallback((newValue) => {\r\n        if (!socket || !isConnected) return;\r\n        \r\n        setFetchedCode(newValue);\r\n        socket.emit(\"update code\", { roomId, code: newValue });\r\n    }, [socket, roomId, isConnected]);\r\n\r\n    const handleLanguageChange = useCallback((e) => {\r\n        if (!socket || !isConnected) return;\r\n        \r\n        const newLanguage = e.target.value;\r\n        setLanguage(newLanguage);\r\n        socket.emit(\"update language\", { roomId, languageUsed: newLanguage });\r\n    }, [socket, roomId, isConnected]);\r\n\r\n    const handleCodeKeybindingChange = useCallback((e) => {\r\n        const value = e.target.value;\r\n        setCodeKeybinding(value === \"default\" ? undefined : value);\r\n    }, []);\r\n\r\n    const handleLeave = useCallback(() => {\r\n        if (!socket || !roomId) {\r\n            navigate('/', { replace: true, state: {} });\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            socket.emit(\"leave room\", { roomId });\r\n            setTimeout(() => {\r\n                navigate('/', { replace: true, state: {} });\r\n            }, 100);\r\n            \r\n        } catch (error) {\r\n            console.error(\"Error leaving room:\", error);\r\n            navigate('/', { replace: true, state: {} });\r\n        }\r\n    }, [socket, roomId, navigate]);\r\n\r\n    const copyToClipboard = useCallback(async (text) => {\r\n        try {\r\n            if (navigator.clipboard && window.isSecureContext) {\r\n                await navigator.clipboard.writeText(text);\r\n                toast.success('Room ID copied to clipboard');\r\n            } else {\r\n                const textArea = document.createElement('textarea');\r\n                textArea.value = text;\r\n                textArea.style.position = 'fixed';\r\n                textArea.style.left = '-999999px';\r\n                textArea.style.top = '-999999px';\r\n                document.body.appendChild(textArea);\r\n                textArea.focus();\r\n                textArea.select();\r\n                document.execCommand('copy');\r\n                textArea.remove();\r\n                toast.success('Room ID copied to clipboard');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to copy room ID:', error);\r\n            toast.error('Failed to copy room ID');\r\n        }\r\n    }, []);\r\n\r\n    // **CHANGED**: This new useEffect is now responsible for joining the room\r\n    // It runs once when the component is ready.\r\n    useEffect(() => {\r\n        if (socket && isConnected && currentUsername && !isInitializedRef.current) {\r\n            console.log(`Joining room as \"${currentUsername}\"`);\r\n            socket.emit(\"when a user joins\", { \r\n                roomId, \r\n                username: currentUsername \r\n            });\r\n            isInitializedRef.current = true;\r\n        }\r\n    }, [socket, isConnected, currentUsername, roomId]);\r\n\r\n    // Setup socket event listeners\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n\r\n        const handleUpdateClientList = ({ userslist }) => {\r\n            console.log(\"Updated users list:\", userslist);\r\n            setFetchedUsers(Array.isArray(userslist) ? userslist : []);\r\n            setIsLoading(false);\r\n            setConnectionError(false);\r\n        };\r\n\r\n        const handleLanguageChange = ({ languageUsed }) => {\r\n            console.log(\"Language changed to:\", languageUsed);\r\n            if (languageUsed && languageUsed !== language) {\r\n                setLanguage(languageUsed);\r\n            }\r\n        };\r\n\r\n        const handleCodeChange = ({ code }) => {\r\n            console.log(\"Code updated, length:\", code ? code.length : 0);\r\n            setFetchedCode(code || \"\");\r\n        };\r\n\r\n        const handleNewMemberJoined = ({ username }) => {\r\n            console.log(`New member joined: ${username}`);\r\n            toast.success(`${username} joined the room`);\r\n        };\r\n\r\n        const handleMemberLeft = ({ username }) => {\r\n            console.log(`Member left: ${username}`);\r\n            toast(`${username} left the room`, { icon: 'ðŸ‘‹' });\r\n        };\r\n\r\n        const handleSocketError = (error) => {\r\n            console.error(\"Socket error:\", error);\r\n            setConnectionError(true);\r\n            toast.error(error.message || \"Connection error occurred\");\r\n        };\r\n\r\n        const handleDisconnect = (reason) => {\r\n            console.log(\"Socket disconnected:\", reason);\r\n            setConnectionError(true);\r\n            setIsLoading(false);\r\n            toast.error(\"Disconnected from server\");\r\n        };\r\n\r\n        const handleConnect = () => {\r\n            console.log(\"Socket reconnected\");\r\n            setConnectionError(false);\r\n            toast.success(\"Reconnected to server\");\r\n            \r\n            if (roomId && currentUsername) {\r\n                setTimeout(() => {\r\n                    socket.emit(\"when a user joins\", { \r\n                        roomId, \r\n                        username: currentUsername \r\n                    });\r\n                }, 100);\r\n            }\r\n        };\r\n\r\n        const handleConnectError = (error) => {\r\n            console.error(\"Connection error:\", error);\r\n            setConnectionError(true);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        socket.on(\"updating client list\", handleUpdateClientList);\r\n        socket.on(\"on language change\", handleLanguageChange);\r\n        socket.on(\"on code change\", handleCodeChange);\r\n        socket.on(\"new member joined\", handleNewMemberJoined);\r\n        socket.on(\"member left\", handleMemberLeft);\r\n        socket.on(\"error\", handleSocketError);\r\n        socket.on(\"disconnect\", handleDisconnect);\r\n        socket.on(\"connect\", handleConnect);\r\n        socket.on(\"connect_error\", handleConnectError);\r\n\r\n        return () => {\r\n            socket.off(\"updating client list\", handleUpdateClientList);\r\n            socket.off(\"on language change\", handleLanguageChange);\r\n            socket.off(\"on code change\", handleCodeChange);\r\n            socket.off(\"new member joined\", handleNewMemberJoined);\r\n            socket.off(\"member left\", handleMemberLeft);\r\n            socket.off(\"error\", handleSocketError);\r\n            socket.off(\"disconnect\", handleDisconnect);\r\n            socket.off(\"connect\", handleConnect);\r\n            socket.off(\"connect_error\", handleConnectError);\r\n        };\r\n    }, [socket, language, roomId, currentUsername]);\r\n\r\n    // Handle browser back button and page refresh\r\n    useEffect(() => {\r\n        const handlePopState = (e) => {\r\n            handleLeave();\r\n        };\r\n\r\n        const handleBeforeUnload = (e) => {\r\n            if (socket && roomId) {\r\n                socket.emit(\"leave room\", { roomId });\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"popstate\", handlePopState);\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"popstate\", handlePopState);\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        };\r\n    }, [handleLeave, socket, roomId]);\r\n\r\n    // Redirect if no username\r\n    useEffect(() => {\r\n        if (!currentUsername) {\r\n            console.log(\"No username found, redirecting to home\");\r\n            navigate('/', { replace: true });\r\n        }\r\n    }, [currentUsername, navigate]);\r\n\r\n    if (!isConnected) {\r\n        return (\r\n            <div className=\"room\">\r\n                <div className=\"roomSidebar\">\r\n                    <div className=\"connectionStatus\">\r\n                        <p>ðŸ”„ Connecting...</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // --- JSX for the component ---\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"roomSidebar\">\r\n                <div className=\"roomSidebarHeader\">\r\n                    <h3>Room: {roomId ? roomId.substring(0, 8) + '...' : 'Unknown'}</h3>\r\n                    {currentUsername && (\r\n                        <p className=\"currentUser\">ðŸ‘¤ {currentUsername}</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"roomSidebarUsersWrapper\">\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"language\" className=\"fieldLabel\">Language:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            name=\"language\" \r\n                            id=\"language\" \r\n                            value={language} \r\n                            onChange={handleLanguageChange}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            {languagesAvailable.map(eachLanguage => (\r\n                                <option key={eachLanguage} value={eachLanguage}>{eachLanguage}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"codeKeybinding\" className=\"fieldLabel\">Keybinding:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            name=\"codeKeybinding\" \r\n                            id=\"codeKeybinding\" \r\n                            value={codeKeybinding || \"default\"} \r\n                            onChange={handleCodeKeybindingChange}\r\n                        >\r\n                            {codeKeybindingsAvailable.map(eachKeybinding => (\r\n                                <option key={eachKeybinding} value={eachKeybinding}>{eachKeybinding}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"usersSection\">\r\n                        <p className=\"usersTitle\">\r\n                            Connected Users {isLoading ? \"(...)\" : `(${fetchedUsers.length})`}\r\n                        </p>\r\n                        <div className=\"roomSidebarUsers\">\r\n                            {isLoading ? (\r\n                                <div className=\"roomSidebarUsersEachName\">Loading...</div>\r\n                            ) : (\r\n                                fetchedUsers.map((each, index) => (\r\n                                    <div key={`${each}-${index}`} className=\"roomSidebarUsersEach\">\r\n                                        <div \r\n                                            className=\"roomSidebarUsersEachAvatar\" \r\n                                            style={{ backgroundColor: generateColor(each) }}\r\n                                        >\r\n                                            {each.slice(0, 2).toUpperCase()}\r\n                                        </div>\r\n                                        <div className=\"roomSidebarUsersEachName\">\r\n                                            {each}\r\n                                            {each === currentUsername && <span className=\"youLabel\"> (You)</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"roomSidebarActions\">\r\n                    <button className=\"roomSidebarCopyBtn\" onClick={() => copyToClipboard(roomId)}>\r\n                        ðŸ“‹ Copy Room ID\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn\" onClick={handleLeave}>\r\n                        ðŸšª Leave Room\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"editorSection\">\r\n                <AceEditor\r\n                    className=\"roomCodeEditor\"\r\n                    mode={language}\r\n                    keyboardHandler={codeKeybinding}\r\n                    theme=\"monokai\"\r\n                    name=\"collabEditor\"\r\n                    width=\"auto\"\r\n                    height=\"auto\"\r\n                    value={fetchedCode}\r\n                    onChange={onChange}\r\n                    fontSize={15}\r\n                    readOnly={!isConnected}\r\n                    enableLiveAutocompletion={true}\r\n                    enableBasicAutocompletion={true}\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{ showLineNumbers: true }}\r\n                />\r\n            </div>\r\n            \r\n            <Toaster position=\"top-right\" />\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}