{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-css\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(_ref) {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const [fetchedUsers, setFetchedUsers] = useState(() => []);\n  const [fetchedCode, setFetchedCode] = useState(() => \"\");\n  const [language, setLanguage] = useState(() => \"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(() => undefined);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n\n  function onChange(newValue) {\n    setFetchedCode(newValue);\n    socket.emit(\"update code\", {\n      roomId,\n      code: newValue\n    });\n    socket.emit(\"syncing the code\", {\n      roomId: roomId\n    });\n  }\n\n  function handleLanguageChange(e) {\n    setLanguage(e.target.value);\n    socket.emit(\"update language\", {\n      roomId,\n      languageUsed: e.target.value\n    });\n    socket.emit(\"syncing the language\", {\n      roomId: roomId\n    });\n  }\n\n  function handleCodeKeybindingChange(e) {\n    setCodeKeybinding(e.target.value === \"default\" ? undefined : e.target.value);\n  }\n\n  function handleLeave() {\n    socket.disconnect();\n    !socket.connected && navigate('/', {\n      replace: true,\n      state: {}\n    });\n  }\n\n  function copyToClipboard(text) {\n    try {\n      navigator.clipboard.writeText(text);\n      toast.success('Room ID copied');\n    } catch (exp) {\n      console.error(exp);\n    }\n  }\n\n  useEffect(() => {\n    socket.on(\"updating client list\", _ref2 => {\n      let {\n        userslist\n      } = _ref2;\n      setFetchedUsers(userslist);\n    });\n    socket.on(\"on language change\", _ref3 => {\n      let {\n        languageUsed\n      } = _ref3;\n      setLanguage(languageUsed);\n    });\n    socket.on(\"on code change\", _ref4 => {\n      let {\n        code\n      } = _ref4;\n      setFetchedCode(code);\n    });\n    socket.on(\"new member joined\", _ref5 => {\n      let {\n        username\n      } = _ref5;\n      toast(`${username} joined`);\n    });\n    socket.on(\"member left\", _ref6 => {\n      let {\n        username\n      } = _ref6;\n      toast(`${username} left`);\n    });\n    const backButtonEventListner = window.addEventListener(\"popstate\", function (e) {\n      const eventStateObj = e.state;\n\n      if (!('usr' in eventStateObj) || !('username' in eventStateObj.usr)) {\n        socket.disconnect();\n      }\n    });\n    return () => {\n      window.removeEventListener(\"popstate\", backButtonEventListner);\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarUsersWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"language\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            children: languagesAvailable.map(eachLanguage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachLanguage,\n              children: eachLanguage\n            }, eachLanguage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            name: \"codeKeybinding\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding,\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(eachKeybinding => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eachKeybinding,\n              children: eachKeybinding\n            }, eachKeybinding, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connected Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomSidebarUsers\",\n          children: fetchedUsers.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsersEach\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachAvatar\",\n              style: {\n                backgroundColor: `${generateColor(each)}`\n              },\n              children: each.slice(0, 2).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEachName\",\n              children: each\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, each, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roomSidebarCopyBtn\",\n        onClick: () => {\n          copyToClipboard(roomId);\n        },\n        children: \"Copy Room id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roomSidebarBtn\",\n        onClick: () => {\n          handleLeave();\n        },\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n      placeholder: \"Write your code here.\",\n      className: \"roomCodeEditor\",\n      mode: language,\n      keyboardHandler: codeKeybinding,\n      theme: \"monokai\",\n      name: \"collabEditor\",\n      width: \"auto\",\n      height: \"auto\",\n      value: fetchedCode,\n      onChange: onChange,\n      fontSize: 15,\n      showPrintMargin: true,\n      showGutter: true,\n      highlightActiveLine: true,\n      enableLiveAutocompletion: true,\n      enableBasicAutocompletion: false,\n      enableSnippets: false,\n      wrapEnabled: true,\n      tabSize: 2,\n      editorProps: {\n        $blockScrolling: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"JpuILYambOJ1TLUGjev+gArBYOc=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","AceEditor","Toaster","toast","useNavigate","useParams","generateColor","Room","socket","navigate","roomId","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","languagesAvailable","codeKeybindingsAvailable","onChange","newValue","emit","code","handleLanguageChange","e","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","disconnect","connected","replace","state","copyToClipboard","text","navigator","clipboard","writeText","success","exp","console","error","on","userslist","username","backButtonEventListner","window","addEventListener","eventStateObj","usr","removeEventListener","map","eachLanguage","eachKeybinding","each","backgroundColor","slice","toUpperCase","$blockScrolling"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css'\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-yaml\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/mode-css\";\r\n\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room({ socket }) {\r\n  const navigate = useNavigate()\r\n  const { roomId } = useParams()\r\n  const [fetchedUsers, setFetchedUsers] = useState(() => [])\r\n  const [fetchedCode, setFetchedCode] = useState(() => \"\")\r\n  const [language, setLanguage] = useState(() => \"javascript\")\r\n  const [codeKeybinding, setCodeKeybinding] = useState(() => undefined)\r\n\r\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\", \"yaml\", \"html\"]\r\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"]\r\n\r\n  function onChange(newValue) {\r\n    setFetchedCode(newValue)\r\n    socket.emit(\"update code\", { roomId, code: newValue })\r\n    socket.emit(\"syncing the code\", { roomId: roomId })\r\n  }\r\n\r\n  function handleLanguageChange(e) {\r\n    setLanguage(e.target.value)\r\n    socket.emit(\"update language\", { roomId, languageUsed: e.target.value })\r\n    socket.emit(\"syncing the language\", { roomId: roomId })\r\n  }\r\n\r\n  function handleCodeKeybindingChange(e) {\r\n    setCodeKeybinding(e.target.value === \"default\" ? undefined : e.target.value)\r\n  }\r\n\r\n  function handleLeave() {\r\n    socket.disconnect()\r\n    !socket.connected && navigate('/', { replace: true, state: {} })\r\n  }\r\n\r\n  function copyToClipboard(text) {\r\n    try {\r\n      navigator.clipboard.writeText(text);\r\n      toast.success('Room ID copied')\r\n    } catch (exp) {\r\n      console.error(exp)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"updating client list\", ({ userslist }) => {\r\n      setFetchedUsers(userslist)\r\n    })\r\n\r\n    socket.on(\"on language change\", ({ languageUsed }) => {\r\n      setLanguage(languageUsed)\r\n    })\r\n\r\n    socket.on(\"on code change\", ({ code }) => {\r\n      setFetchedCode(code)\r\n    })\r\n\r\n    socket.on(\"new member joined\", ({ username }) => {\r\n      toast(`${username} joined`)\r\n    })\r\n\r\n    socket.on(\"member left\", ({ username }) => {\r\n      toast(`${username} left`)\r\n    })\r\n\r\n    const backButtonEventListner = window.addEventListener(\"popstate\", function (e) {\r\n      const eventStateObj = e.state\r\n      if (!('usr' in eventStateObj) || !('username' in eventStateObj.usr)) {\r\n        socket.disconnect()\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"popstate\", backButtonEventListner)\r\n    }\r\n  }, [socket])\r\n\r\n  return (\r\n    <div className=\"room\">\r\n      <div className=\"roomSidebar\">\r\n        <div className=\"roomSidebarUsersWrapper\">\r\n          <div className=\"languageFieldWrapper\">\r\n            <select className=\"languageField\" name=\"language\" id=\"language\" value={language} onChange={handleLanguageChange}>\r\n              {languagesAvailable.map(eachLanguage => (\r\n                <option key={eachLanguage} value={eachLanguage}>{eachLanguage}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"languageFieldWrapper\">\r\n            <select className=\"languageField\" name=\"codeKeybinding\" id=\"codeKeybinding\" value={codeKeybinding} onChange={handleCodeKeybindingChange}>\r\n              {codeKeybindingsAvailable.map(eachKeybinding => (\r\n                <option key={eachKeybinding} value={eachKeybinding}>{eachKeybinding}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <p>Connected Users:</p>\r\n          <div className=\"roomSidebarUsers\">\r\n            {fetchedUsers.map((each) => (\r\n              <div key={each} className=\"roomSidebarUsersEach\">\r\n                <div className=\"roomSidebarUsersEachAvatar\" style={{ backgroundColor: `${generateColor(each)}` }}>{each.slice(0, 2).toUpperCase()}</div>\r\n                <div className=\"roomSidebarUsersEachName\">{each}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"roomSidebarCopyBtn\" onClick={() => { copyToClipboard(roomId) }}>Copy Room id</button>\r\n        <button className=\"roomSidebarBtn\" onClick={() => {\r\n          handleLeave()\r\n        }}>Leave</button>\r\n      </div>\r\n\r\n      <AceEditor\r\n        placeholder=\"Write your code here.\"\r\n        className=\"roomCodeEditor\"\r\n        mode={language}\r\n        keyboardHandler={codeKeybinding}\r\n        theme=\"monokai\"\r\n        name=\"collabEditor\"\r\n        width=\"auto\"\r\n        height=\"auto\"\r\n        value={fetchedCode}\r\n        onChange={onChange}\r\n        fontSize={15}\r\n        showPrintMargin={true}\r\n        showGutter={true}\r\n        highlightActiveLine={true}\r\n        enableLiveAutocompletion={true}\r\n        enableBasicAutocompletion={false}\r\n        enableSnippets={false}\r\n        wrapEnabled={true}\r\n        tabSize={2}\r\n        editorProps={{\r\n          $blockScrolling: true\r\n        }}\r\n      />\r\n      <Toaster />\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}