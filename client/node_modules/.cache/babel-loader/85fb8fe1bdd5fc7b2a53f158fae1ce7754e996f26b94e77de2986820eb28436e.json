{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport { useSocket } from '../../components/SocketWrapper';\n\n// Import necessary modes, themes, and extensions for Ace Editor\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    socket,\n    isConnected,\n    username,\n    roomId\n  } = useSocket();\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n\n  // States\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [output, setOutput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const typingTimeoutRef = useRef(null);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n  const onChange = useCallback(newValue => {\n    if (socket) {\n      setFetchedCode(newValue);\n      socket.emit(\"update code\", {\n        roomId,\n        code: newValue\n      });\n    }\n    if (socket && username) {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      } else {\n        socket.emit('typing-start', {\n          roomId,\n          username\n        });\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        socket.emit('typing-stop', {\n          roomId,\n          username\n        });\n        typingTimeoutRef.current = null;\n      }, 1500);\n    }\n  }, [socket, roomId, username]);\n  const handleLanguageChange = useCallback(e => {\n    if (socket) {\n      const newLanguage = e.target.value;\n      setLanguage(newLanguage);\n      socket.emit(\"update language\", {\n        roomId,\n        languageUsed: newLanguage\n      });\n    }\n  }, [socket, roomId]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    sessionStorage.removeItem('username');\n    if (socket) {\n      socket.emit(\"leave room\", {\n        roomId\n      });\n    }\n    navigate('/', {\n      replace: true,\n      state: {}\n    });\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID copied to clipboard');\n    } catch (error) {\n      toast.error('Failed to copy room ID');\n    }\n  }, [roomId]);\n  const handleRunCode = async () => {\n    setIsLoading(true);\n    setOutput(\"Executing code...\");\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          language: language,\n          code: fetchedCode\n        })\n      });\n      const result = await response.json();\n      if (result.stdout) setOutput(result.stdout);else if (result.stderr) setOutput(result.stderr);else if (result.compile_output) setOutput(result.compile_output);else setOutput(\"Execution finished with no output.\");\n    } catch (error) {\n      setOutput(\"An error occurred. Could not run the code.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ðŸ‘‡ THIS IS THE CORRECTED AI HANDLER FUNCTION\n  const handleAiRequest = async prompt => {\n    var _editorRef$current;\n    const editor = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.editor;\n    if (!editor) return;\n    const selectedCode = editor.getSelectedText();\n    if (!selectedCode) {\n      toast.error(\"Please select a block of code first.\");\n      return;\n    }\n    setIsAiLoading(true);\n    setAiResponse(`AI is thinking about: \"${prompt}\"...`);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/ask-ai`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: selectedCode,\n          prompt: prompt\n        })\n      });\n      const result = await response.json();\n      setAiResponse(result.response || \"No response from AI.\");\n    } catch (error) {\n      setAiResponse(\"An error occurred. Could not get a response from the AI.\");\n    } finally {\n      setIsAiLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!socket) return;\n    const handleUpdateClientList = ({\n      userslist\n    }) => setFetchedUsers(userslist || []);\n    const handleLanguageChange = ({\n      languageUsed\n    }) => {\n      if (languageUsed) setLanguage(languageUsed);\n    };\n    const handleCodeChange = ({\n      code\n    }) => setFetchedCode(code || \"\");\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleUserTypingStart = ({\n      username\n    }) => {\n      setTypingUsers(prev => [...new Set([...prev, username])]);\n    };\n    const handleUserTypingStop = ({\n      username\n    }) => {\n      setTypingUsers(prev => prev.filter(u => u !== username));\n    };\n    socket.on('user-typing-start', handleUserTypingStart);\n    socket.on('user-typing-stop', handleUserTypingStop);\n    return () => {\n      socket.off('user-typing-start', handleUserTypingStart);\n      socket.off('user-typing-stop', handleUserTypingStop);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!isConnected || !socket) {\n      const timer = setTimeout(() => {\n        if (!(socket !== null && socket !== void 0 && socket.connected)) {\n          toast.error(\"Connection lost. Returning to home page.\");\n          navigate('/', {\n            replace: true\n          });\n        }\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isConnected, socket, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomId ? roomId.substring(0, 8) : '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"fieldLabel\",\n            children: \"LANGUAGE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            children: languagesAvailable.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang,\n              children: lang.toUpperCase()\n            }, lang, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"codeKeybinding\",\n            className: \"fieldLabel\",\n            children: \"KEYBINDING:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(kb => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kb,\n              children: kb.toUpperCase()\n            }, kb, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"usersTitle\",\n            children: [\"CONNECTED USERS (\", fetchedUsers.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsers\",\n            children: fetchedUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachAvatar\",\n                style: {\n                  backgroundColor: generateColor(user)\n                },\n                children: user.slice(0, 2).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: [user, user === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"youLabel\",\n                  children: \" (You)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 63\n                }, this), typingUsers.includes(user) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"typing-indicator\",\n                  children: \"typing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this)]\n            }, user, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarCopyBtn\",\n          onClick: copyToClipboard,\n          children: \"COPY ROOM ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: handleLeave,\n          children: \"LEAVE ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn runBtn\",\n          onClick: handleRunCode,\n          disabled: isLoading,\n          children: isLoading ? 'Running...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aiBtn\",\n          onClick: () => handleAiRequest(\"Explain this code\"),\n          disabled: isAiLoading,\n          children: \"Explain Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aiBtn\",\n          onClick: () => handleAiRequest(\"Find potential bugs\"),\n          disabled: isAiLoading,\n          children: \"Find Bugs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        ref: editorRef,\n        className: \"roomCodeEditor\",\n        mode: language,\n        keyboardHandler: codeKeybinding,\n        theme: \"monokai\",\n        name: \"collabEditor\",\n        width: \"auto\",\n        height: \"auto\",\n        value: fetchedCode,\n        onChange: onChange,\n        fontSize: 15,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true,\n        editorProps: {\n          $blockScrolling: true\n        },\n        setOptions: ({\n          showLineNumbers: true\n        }, {})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outputPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"outputBox\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aiPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"AI Assistant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"outputBox\",\n            children: aiResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n_s(Room, \"ebHHvf+Go1aV7FiaZK7H+TbIkfk=\", false, function () {\n  return [useSocket, useNavigate];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","AceEditor","Toaster","toast","useNavigate","generateColor","useSocket","jsxDEV","_jsxDEV","Room","_s","socket","isConnected","username","roomId","navigate","editorRef","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","output","setOutput","isLoading","setIsLoading","aiResponse","setAiResponse","isAiLoading","setIsAiLoading","typingUsers","setTypingUsers","typingTimeoutRef","languagesAvailable","codeKeybindingsAvailable","onChange","newValue","emit","code","current","clearTimeout","setTimeout","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","sessionStorage","removeItem","replace","state","copyToClipboard","navigator","clipboard","writeText","success","error","handleRunCode","apiUrl","process","env","REACT_APP_API_URL","response","fetch","method","headers","body","JSON","stringify","result","json","stdout","stderr","compile_output","handleAiRequest","prompt","_editorRef$current","editor","selectedCode","getSelectedText","handleUpdateClientList","userslist","handleCodeChange","on","off","handleUserTypingStart","prev","Set","handleUserTypingStop","filter","u","timer","connected","className","children","substring","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","map","lang","toUpperCase","kb","length","user","style","backgroundColor","slice","includes","onClick","disabled","ref","mode","keyboardHandler","theme","name","width","height","fontSize","enableLiveAutocompletion","enableBasicAutocompletion","editorProps","$blockScrolling","setOptions","showLineNumbers","position","_c","$RefreshReg$"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css';\r\nimport { useSocket } from '../../components/SocketWrapper';\r\n\r\n// Import necessary modes, themes, and extensions for Ace Editor\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room() {\r\n    const { socket, isConnected, username, roomId } = useSocket();\r\n    const navigate = useNavigate();\r\n    const editorRef = useRef(null);\r\n\r\n    // States\r\n    const [fetchedUsers, setFetchedUsers] = useState([]);\r\n    const [fetchedCode, setFetchedCode] = useState(\"\");\r\n    const [language, setLanguage] = useState(\"javascript\");\r\n    const [codeKeybinding, setCodeKeybinding] = useState(undefined);\r\n    const [output, setOutput] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [aiResponse, setAiResponse] = useState(\"\");\r\n    const [isAiLoading, setIsAiLoading] = useState(false);\r\n    const [typingUsers, setTypingUsers] = useState([]);\r\n    const typingTimeoutRef = useRef(null);\r\n\r\n    const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\r\n    const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\r\n\r\n    const onChange = useCallback((newValue) => {\r\n        if (socket) {\r\n            setFetchedCode(newValue);\r\n            socket.emit(\"update code\", { roomId, code: newValue });\r\n        }\r\n        if (socket && username) {\r\n            if (typingTimeoutRef.current) {\r\n                clearTimeout(typingTimeoutRef.current);\r\n            } else {\r\n                socket.emit('typing-start', { roomId, username });\r\n            }\r\n            typingTimeoutRef.current = setTimeout(() => {\r\n                socket.emit('typing-stop', { roomId, username });\r\n                typingTimeoutRef.current = null;\r\n            }, 1500);\r\n        }\r\n    }, [socket, roomId, username]);\r\n\r\n    const handleLanguageChange = useCallback((e) => {\r\n        if (socket) {\r\n            const newLanguage = e.target.value;\r\n            setLanguage(newLanguage);\r\n            socket.emit(\"update language\", { roomId, languageUsed: newLanguage });\r\n        }\r\n    }, [socket, roomId]);\r\n\r\n    const handleCodeKeybindingChange = useCallback((e) => {\r\n        const value = e.target.value;\r\n        setCodeKeybinding(value === \"default\" ? undefined : value);\r\n    }, []);\r\n\r\n    const handleLeave = useCallback(() => {\r\n        sessionStorage.removeItem('username');\r\n        if (socket) {\r\n            socket.emit(\"leave room\", { roomId });\r\n        }\r\n        navigate('/', { replace: true, state: {} });\r\n    }, [socket, roomId, navigate]);\r\n\r\n    const copyToClipboard = useCallback(async () => {\r\n        if (!roomId) return;\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success('Room ID copied to clipboard');\r\n        } catch (error) {\r\n            toast.error('Failed to copy room ID');\r\n        }\r\n    }, [roomId]);\r\n\r\n    const handleRunCode = async () => {\r\n        setIsLoading(true);\r\n        setOutput(\"Executing code...\");\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/execute`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    language: language,\r\n                    code: fetchedCode\r\n                })\r\n            });\r\n            const result = await response.json();\r\n            if (result.stdout) setOutput(result.stdout);\r\n            else if (result.stderr) setOutput(result.stderr);\r\n            else if (result.compile_output) setOutput(result.compile_output);\r\n            else setOutput(\"Execution finished with no output.\");\r\n        } catch (error) {\r\n            setOutput(\"An error occurred. Could not run the code.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // ðŸ‘‡ THIS IS THE CORRECTED AI HANDLER FUNCTION\r\n    const handleAiRequest = async (prompt) => {\r\n        const editor = editorRef.current?.editor;\r\n        if (!editor) return;\r\n\r\n        const selectedCode = editor.getSelectedText();\r\n        if (!selectedCode) {\r\n            toast.error(\"Please select a block of code first.\");\r\n            return;\r\n        }\r\n\r\n        setIsAiLoading(true);\r\n        setAiResponse(`AI is thinking about: \"${prompt}\"...`);\r\n\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/ask-ai`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    code: selectedCode,\r\n                    prompt: prompt\r\n                })\r\n            });\r\n            const result = await response.json();\r\n            setAiResponse(result.response || \"No response from AI.\");\r\n        } catch (error) {\r\n            setAiResponse(\"An error occurred. Could not get a response from the AI.\");\r\n        } finally {\r\n            setIsAiLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        const handleUpdateClientList = ({ userslist }) => setFetchedUsers(userslist || []);\r\n        const handleLanguageChange = ({ languageUsed }) => { if (languageUsed) setLanguage(languageUsed); };\r\n        const handleCodeChange = ({ code }) => setFetchedCode(code || \"\");\r\n\r\n        socket.on(\"updating client list\", handleUpdateClientList);\r\n        socket.on(\"on language change\", handleLanguageChange);\r\n        socket.on(\"on code change\", handleCodeChange);\r\n\r\n        return () => {\r\n            socket.off(\"updating client list\", handleUpdateClientList);\r\n            socket.off(\"on language change\", handleLanguageChange);\r\n            socket.off(\"on code change\", handleCodeChange);\r\n        };\r\n    }, [socket]);\r\n    \r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        const handleUserTypingStart = ({ username }) => {\r\n            setTypingUsers(prev => [...new Set([...prev, username])]);\r\n        };\r\n        const handleUserTypingStop = ({ username }) => {\r\n            setTypingUsers(prev => prev.filter(u => u !== username));\r\n        };\r\n        socket.on('user-typing-start', handleUserTypingStart);\r\n        socket.on('user-typing-stop', handleUserTypingStop);\r\n        return () => {\r\n            socket.off('user-typing-start', handleUserTypingStart);\r\n            socket.off('user-typing-stop', handleUserTypingStop);\r\n        };\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        if (!isConnected || !socket) {\r\n            const timer = setTimeout(() => {\r\n                if (!socket?.connected) {\r\n                    toast.error(\"Connection lost. Returning to home page.\");\r\n                    navigate('/', {replace: true});\r\n                }\r\n            }, 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [isConnected, socket, navigate]);\r\n\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"roomSidebar\">\r\n                <div className=\"roomSidebarHeader\">\r\n                    <h3>Room: {roomId ? roomId.substring(0, 8) : '...'}</h3>\r\n                    <p>User: {username}</p>\r\n                </div>\r\n                \r\n                <div className=\"roomSidebarContent\">\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"language\" className=\"fieldLabel\">LANGUAGE:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"language\" \r\n                            value={language} \r\n                            onChange={handleLanguageChange}\r\n                        >\r\n                            {languagesAvailable.map(lang => (\r\n                                <option key={lang} value={lang}>{lang.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"codeKeybinding\" className=\"fieldLabel\">KEYBINDING:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"codeKeybinding\" \r\n                            value={codeKeybinding || \"default\"} \r\n                            onChange={handleCodeKeybindingChange}\r\n                        >\r\n                            {codeKeybindingsAvailable.map(kb => (\r\n                                <option key={kb} value={kb}>{kb.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"usersSection\">\r\n                        <p className=\"usersTitle\">CONNECTED USERS ({fetchedUsers.length})</p>\r\n                        <div className=\"roomSidebarUsers\">\r\n                            {fetchedUsers.map((user) => (\r\n                                <div key={user} className=\"roomSidebarUsersEach\">\r\n                                    <div \r\n                                        className=\"roomSidebarUsersEachAvatar\" \r\n                                        style={{ backgroundColor: generateColor(user) }}\r\n                                    >\r\n                                        {user.slice(0, 2).toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"roomSidebarUsersEachName\">\r\n                                        {user}\r\n                                        {user === username && <span className=\"youLabel\"> (You)</span>}\r\n                                        {typingUsers.includes(user) && <span className=\"typing-indicator\">typing...</span>}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"roomSidebarActions\">\r\n                    <button className=\"roomSidebarCopyBtn\" onClick={copyToClipboard}>\r\n                        COPY ROOM ID\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn\" onClick={handleLeave}>\r\n                        LEAVE ROOM\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn runBtn\" onClick={handleRunCode} disabled={isLoading}>\r\n                        {isLoading ? 'Running...' : 'Run Code'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"editorSection\">\r\n                <div className=\"editorControls\">\r\n                    <button className=\"aiBtn\" onClick={() => handleAiRequest(\"Explain this code\")} disabled={isAiLoading}>\r\n                        Explain Code\r\n                    </button>\r\n                    <button className=\"aiBtn\" onClick={() => handleAiRequest(\"Find potential bugs\")} disabled={isAiLoading}>\r\n                        Find Bugs\r\n                    </button>\r\n                </div>\r\n\r\n                <AceEditor\r\n                    ref={editorRef}\r\n                    className=\"roomCodeEditor\"\r\n                    mode={language}\r\n                    keyboardHandler={codeKeybinding}\r\n                    theme=\"monokai\"\r\n                    name=\"collabEditor\"\r\n                    width=\"auto\"\r\n                    height=\"auto\"\r\n                    value={fetchedCode}\r\n                    onChange={onChange}\r\n                    fontSize={15}\r\n                    enableLiveAutocompletion={true}\r\n                    enableBasicAutocompletion={true}\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{ showLineNumbers: true },{}}\r\n                />\r\n                \r\n                <div className=\"outputContainer\">\r\n                    <div className=\"outputPanel\">\r\n                        <h4>Output:</h4>\r\n                        <pre className=\"outputBox\">{output}</pre>\r\n                    </div>\r\n                    <div className=\"aiPanel\">\r\n                        <h4>AI Assistant:</h4>\r\n                        <pre className=\"outputBox\">{aiResponse}</pre>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <Toaster position=\"top-right\" />\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}