{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport { useSocket } from '../../components/SocketWrapper';\n\n// Import necessary modes, themes, and extensions for Ace Editor\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const {\n    socket,\n    isConnected,\n    username,\n    roomId\n  } = useSocket();\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n\n  // States\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [output, setOutput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const typingTimeoutRef = useRef(null);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n\n  // Create background particles on component mount\n  useEffect(() => {\n    const createBackgroundEffects = () => {\n      const backgroundDiv = document.createElement('div');\n      backgroundDiv.className = 'background-effects';\n\n      // Create particles\n      for (let i = 0; i < 15; i++) {\n        const particle = document.createElement('div');\n        particle.className = 'particle';\n        particle.style.top = Math.random() * 100 + '%';\n        particle.style.left = Math.random() * 100 + '%';\n        particle.style.animationDelay = Math.random() * 6 + 's';\n        particle.style.animationDuration = 4 + Math.random() * 4 + 's';\n        backgroundDiv.appendChild(particle);\n      }\n      document.body.appendChild(backgroundDiv);\n    };\n    createBackgroundEffects();\n\n    // Cleanup on unmount\n    return () => {\n      const backgroundEffects = document.querySelector('.background-effects');\n      if (backgroundEffects) {\n        backgroundEffects.remove();\n      }\n    };\n  }, []);\n  const onChange = useCallback(newValue => {\n    if (socket) {\n      setFetchedCode(newValue);\n      socket.emit(\"update code\", {\n        roomId,\n        code: newValue\n      });\n    }\n    if (socket && username) {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      } else {\n        socket.emit('typing-start', {\n          roomId,\n          username\n        });\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        socket.emit('typing-stop', {\n          roomId,\n          username\n        });\n        typingTimeoutRef.current = null;\n      }, 1500);\n    }\n  }, [socket, roomId, username]);\n  const handleLanguageChange = useCallback(e => {\n    if (socket) {\n      const newLanguage = e.target.value;\n      setLanguage(newLanguage);\n      socket.emit(\"update language\", {\n        roomId,\n        languageUsed: newLanguage\n      });\n    }\n  }, [socket, roomId]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    sessionStorage.removeItem('username');\n    if (socket) {\n      socket.emit(\"leave room\", {\n        roomId\n      });\n    }\n    navigate('/', {\n      replace: true,\n      state: {}\n    });\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID copied to clipboard');\n    } catch (error) {\n      toast.error('Failed to copy room ID');\n    }\n  }, [roomId]);\n  const handleRunCode = async () => {\n    setIsLoading(true);\n    setOutput(\"Executing code...\");\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          language: language,\n          code: fetchedCode\n        })\n      });\n      const result = await response.json();\n      if (result.stdout) setOutput(result.stdout);else if (result.stderr) setOutput(result.stderr);else if (result.compile_output) setOutput(result.compile_output);else setOutput(\"Execution finished with no output.\");\n    } catch (error) {\n      setOutput(\"An error occurred. Could not run the code.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleAiRequest = async prompt => {\n    var _editorRef$current;\n    const editor = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.editor;\n    if (!editor) return;\n    const selectedCode = editor.getSelectedText();\n    if (!selectedCode) {\n      toast.error(\"Please select a block of code first.\");\n      return;\n    }\n    setIsAiLoading(true);\n    setAiResponse(`AI is thinking about: \"${prompt}\"...`);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/ask-ai`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: selectedCode,\n          prompt: prompt\n        })\n      });\n      const result = await response.json();\n      setAiResponse(result.response || \"No response from AI.\");\n    } catch (error) {\n      setAiResponse(\"An error occurred. Could not get a response from the AI.\");\n    } finally {\n      setIsAiLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!socket) return;\n    const handleUpdateClientList = ({\n      userslist\n    }) => setFetchedUsers(userslist || []);\n    const handleLanguageChange = ({\n      languageUsed\n    }) => {\n      if (languageUsed) setLanguage(languageUsed);\n    };\n    const handleCodeChange = ({\n      code\n    }) => setFetchedCode(code || \"\");\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleUserTypingStart = ({\n      username\n    }) => {\n      setTypingUsers(prev => [...new Set([...prev, username])]);\n    };\n    const handleUserTypingStop = ({\n      username\n    }) => {\n      setTypingUsers(prev => prev.filter(u => u !== username));\n    };\n    socket.on('user-typing-start', handleUserTypingStart);\n    socket.on('user-typing-stop', handleUserTypingStop);\n    return () => {\n      socket.off('user-typing-start', handleUserTypingStart);\n      socket.off('user-typing-stop', handleUserTypingStop);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!isConnected || !socket) {\n      const timer = setTimeout(() => {\n        if (!(socket !== null && socket !== void 0 && socket.connected)) {\n          toast.error(\"Connection lost. Returning to home page.\");\n          navigate('/', {\n            replace: true\n          });\n        }\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isConnected, socket, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo-icon\",\n            children: \"</>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CodeSync\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomId ? roomId.substring(0, 12) : '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Collaborative coding session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"fieldLabel\",\n            children: \"Programming Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            children: languagesAvailable.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang,\n              children: lang === 'c_cpp' ? 'C++' : lang.charAt(0).toUpperCase() + lang.slice(1)\n            }, lang, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"codeKeybinding\",\n            className: \"fieldLabel\",\n            children: \"Editor Keybinding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(kb => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kb,\n              children: kb.charAt(0).toUpperCase() + kb.slice(1)\n            }, kb, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usersTitle\",\n            children: [\"Active Collaborators (\", fetchedUsers.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsers\",\n            children: fetchedUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachAvatar\",\n                style: {\n                  background: `linear-gradient(135deg, ${generateColor(user)}, ${generateColor(user + 'dark')})`\n                },\n                children: user.slice(0, 2).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: [user, user === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"youLabel\",\n                  children: \"You\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 63\n                }, this), typingUsers.includes(user) && user !== username && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"typing-indicator\",\n                  children: \"typing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)]\n            }, user, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarCopyBtn\",\n          onClick: copyToClipboard,\n          children: \"\\uD83D\\uDCCB Copy Room ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn runBtn\",\n          onClick: handleRunCode,\n          disabled: isLoading,\n          children: isLoading ? '⏳ Running...' : '▶️ Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: handleLeave,\n          children: \"\\uD83D\\uDEAA Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" <CodeSync> \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aiBtn\",\n            onClick: () => handleAiRequest(\"Ask AI\"),\n            disabled: isAiLoading,\n            children: \"\\uD83E\\uDD16 Explain Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"aiBtn\",\n            onClick: () => handleAiRequest(\"Find potential bugs\"),\n            disabled: isAiLoading,\n            children: \"\\uD83D\\uDC1B Find Bugs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        ref: editorRef,\n        className: \"roomCodeEditor\",\n        mode: language,\n        keyboardHandler: codeKeybinding,\n        theme: \"monokai\",\n        name: \"collabEditor\",\n        width: \"100%\",\n        height: \"100%\",\n        value: fetchedCode,\n        onChange: onChange,\n        fontSize: 15,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true,\n        editorProps: {\n          $blockScrolling: true\n        },\n        setOptions: {\n          showLineNumbers: true,\n          showPrintMargin: false,\n          highlightActiveLine: true,\n          highlightSelectedWord: true,\n          cursorStyle: \"ace\",\n          mergeUndoDeltas: false,\n          behavioursEnabled: true,\n          wrapBehavioursEnabled: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outputPanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCBB Console Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"outputBox\",\n          children: output || \"No output yet. Run your code to see results here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aiPanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83E\\uDD16 AI Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outputBox\",\n          children: aiResponse || \"Welcome to your collaborative coding session!\\n\\nI can help you with:\\n•Select some code and click an AI button to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      toastOptions: {\n        style: {\n          background: 'rgba(255, 255, 255, 0.1)',\n          backdropFilter: 'blur(20px)',\n          color: '#f0f2f5',\n          border: '1px solid rgba(255, 255, 255, 0.12)',\n          borderRadius: '16px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n_s(Room, \"bGEjc2w2eTXcvBE6GHm4ZP2g+AY=\", false, function () {\n  return [useSocket, useNavigate];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","AceEditor","Toaster","toast","useNavigate","generateColor","useSocket","jsxDEV","_jsxDEV","Room","_s","socket","isConnected","username","roomId","navigate","editorRef","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","output","setOutput","isLoading","setIsLoading","aiResponse","setAiResponse","isAiLoading","setIsAiLoading","typingUsers","setTypingUsers","typingTimeoutRef","languagesAvailable","codeKeybindingsAvailable","createBackgroundEffects","backgroundDiv","document","createElement","className","i","particle","style","top","Math","random","left","animationDelay","animationDuration","appendChild","body","backgroundEffects","querySelector","remove","onChange","newValue","emit","code","current","clearTimeout","setTimeout","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","sessionStorage","removeItem","replace","state","copyToClipboard","navigator","clipboard","writeText","success","error","handleRunCode","apiUrl","process","env","REACT_APP_API_URL","response","fetch","method","headers","JSON","stringify","result","json","stdout","stderr","compile_output","handleAiRequest","prompt","_editorRef$current","editor","selectedCode","getSelectedText","handleUpdateClientList","userslist","handleCodeChange","on","off","handleUserTypingStart","prev","Set","handleUserTypingStop","filter","u","timer","connected","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","htmlFor","id","map","lang","charAt","toUpperCase","slice","kb","length","user","background","includes","onClick","disabled","ref","mode","keyboardHandler","theme","name","width","height","fontSize","enableLiveAutocompletion","enableBasicAutocompletion","editorProps","$blockScrolling","setOptions","showLineNumbers","showPrintMargin","highlightActiveLine","highlightSelectedWord","cursorStyle","mergeUndoDeltas","behavioursEnabled","wrapBehavioursEnabled","position","toastOptions","backdropFilter","color","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css';\r\nimport { useSocket } from '../../components/SocketWrapper';\r\n\r\n// Import necessary modes, themes, and extensions for Ace Editor\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room() {\r\n    const { socket, isConnected, username, roomId } = useSocket();\r\n    const navigate = useNavigate();\r\n    const editorRef = useRef(null);\r\n\r\n    // States\r\n    const [fetchedUsers, setFetchedUsers] = useState([]);\r\n    const [fetchedCode, setFetchedCode] = useState(\"\");\r\n    const [language, setLanguage] = useState(\"javascript\");\r\n    const [codeKeybinding, setCodeKeybinding] = useState(undefined);\r\n    const [output, setOutput] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [aiResponse, setAiResponse] = useState(\"\");\r\n    const [isAiLoading, setIsAiLoading] = useState(false);\r\n    const [typingUsers, setTypingUsers] = useState([]);\r\n    const typingTimeoutRef = useRef(null);\r\n\r\n    const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\r\n    const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\r\n\r\n    // Create background particles on component mount\r\n    useEffect(() => {\r\n        const createBackgroundEffects = () => {\r\n            const backgroundDiv = document.createElement('div');\r\n            backgroundDiv.className = 'background-effects';\r\n            \r\n            // Create particles\r\n            for (let i = 0; i < 15; i++) {\r\n                const particle = document.createElement('div');\r\n                particle.className = 'particle';\r\n                particle.style.top = Math.random() * 100 + '%';\r\n                particle.style.left = Math.random() * 100 + '%';\r\n                particle.style.animationDelay = Math.random() * 6 + 's';\r\n                particle.style.animationDuration = (4 + Math.random() * 4) + 's';\r\n                backgroundDiv.appendChild(particle);\r\n            }\r\n            \r\n            document.body.appendChild(backgroundDiv);\r\n        };\r\n\r\n        createBackgroundEffects();\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            const backgroundEffects = document.querySelector('.background-effects');\r\n            if (backgroundEffects) {\r\n                backgroundEffects.remove();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onChange = useCallback((newValue) => {\r\n        if (socket) {\r\n            setFetchedCode(newValue);\r\n            socket.emit(\"update code\", { roomId, code: newValue });\r\n        }\r\n        if (socket && username) {\r\n            if (typingTimeoutRef.current) {\r\n                clearTimeout(typingTimeoutRef.current);\r\n            } else {\r\n                socket.emit('typing-start', { roomId, username });\r\n            }\r\n            typingTimeoutRef.current = setTimeout(() => {\r\n                socket.emit('typing-stop', { roomId, username });\r\n                typingTimeoutRef.current = null;\r\n            }, 1500);\r\n        }\r\n    }, [socket, roomId, username]);\r\n\r\n    const handleLanguageChange = useCallback((e) => {\r\n        if (socket) {\r\n            const newLanguage = e.target.value;\r\n            setLanguage(newLanguage);\r\n            socket.emit(\"update language\", { roomId, languageUsed: newLanguage });\r\n        }\r\n    }, [socket, roomId]);\r\n\r\n    const handleCodeKeybindingChange = useCallback((e) => {\r\n        const value = e.target.value;\r\n        setCodeKeybinding(value === \"default\" ? undefined : value);\r\n    }, []);\r\n\r\n    const handleLeave = useCallback(() => {\r\n        sessionStorage.removeItem('username');\r\n        if (socket) {\r\n            socket.emit(\"leave room\", { roomId });\r\n        }\r\n        navigate('/', { replace: true, state: {} });\r\n    }, [socket, roomId, navigate]);\r\n\r\n    const copyToClipboard = useCallback(async () => {\r\n        if (!roomId) return;\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success('Room ID copied to clipboard');\r\n        } catch (error) {\r\n            toast.error('Failed to copy room ID');\r\n        }\r\n    }, [roomId]);\r\n\r\n    const handleRunCode = async () => {\r\n        setIsLoading(true);\r\n        setOutput(\"Executing code...\");\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/execute`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    language: language,\r\n                    code: fetchedCode\r\n                })\r\n            });\r\n            const result = await response.json();\r\n            if (result.stdout) setOutput(result.stdout);\r\n            else if (result.stderr) setOutput(result.stderr);\r\n            else if (result.compile_output) setOutput(result.compile_output);\r\n            else setOutput(\"Execution finished with no output.\");\r\n        } catch (error) {\r\n            setOutput(\"An error occurred. Could not run the code.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAiRequest = async (prompt) => {\r\n        const editor = editorRef.current?.editor;\r\n        if (!editor) return;\r\n\r\n        const selectedCode = editor.getSelectedText();\r\n        if (!selectedCode) {\r\n            toast.error(\"Please select a block of code first.\");\r\n            return;\r\n        }\r\n\r\n        setIsAiLoading(true);\r\n        setAiResponse(`AI is thinking about: \"${prompt}\"...`);\r\n\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/ask-ai`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    code: selectedCode,\r\n                    prompt: prompt\r\n                })\r\n            });\r\n            const result = await response.json();\r\n            setAiResponse(result.response || \"No response from AI.\");\r\n        } catch (error) {\r\n            setAiResponse(\"An error occurred. Could not get a response from the AI.\");\r\n        } finally {\r\n            setIsAiLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        const handleUpdateClientList = ({ userslist }) => setFetchedUsers(userslist || []);\r\n        const handleLanguageChange = ({ languageUsed }) => { if (languageUsed) setLanguage(languageUsed); };\r\n        const handleCodeChange = ({ code }) => setFetchedCode(code || \"\");\r\n\r\n        socket.on(\"updating client list\", handleUpdateClientList);\r\n        socket.on(\"on language change\", handleLanguageChange);\r\n        socket.on(\"on code change\", handleCodeChange);\r\n\r\n        return () => {\r\n            socket.off(\"updating client list\", handleUpdateClientList);\r\n            socket.off(\"on language change\", handleLanguageChange);\r\n            socket.off(\"on code change\", handleCodeChange);\r\n        };\r\n    }, [socket]);\r\n    \r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        const handleUserTypingStart = ({ username }) => {\r\n            setTypingUsers(prev => [...new Set([...prev, username])]);\r\n        };\r\n        const handleUserTypingStop = ({ username }) => {\r\n            setTypingUsers(prev => prev.filter(u => u !== username));\r\n        };\r\n        socket.on('user-typing-start', handleUserTypingStart);\r\n        socket.on('user-typing-stop', handleUserTypingStop);\r\n        return () => {\r\n            socket.off('user-typing-start', handleUserTypingStart);\r\n            socket.off('user-typing-stop', handleUserTypingStop);\r\n        };\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        if (!isConnected || !socket) {\r\n            const timer = setTimeout(() => {\r\n                if (!socket?.connected) {\r\n                    toast.error(\"Connection lost. Returning to home page.\");\r\n                    navigate('/', {replace: true});\r\n                }\r\n            }, 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [isConnected, socket, navigate]);\r\n\r\n    return (\r\n        <div className=\"room\">\r\n            {/* Sidebar with Logo */}\r\n            <div className=\"roomSidebar\">\r\n                <div className=\"roomSidebarHeader\">\r\n                    <div className=\"room-logo\">\r\n                        <div className=\"logo-icon\">\r\n                            &lt;/&gt;\r\n                        </div>\r\n                        <span>CodeSync</span>\r\n                    </div>\r\n                    <h3>Room: {roomId ? roomId.substring(0, 12) : '...'}</h3>\r\n                    <p>Collaborative coding session</p>\r\n                </div>\r\n                \r\n                <div className=\"roomSidebarContent\">\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"language\" className=\"fieldLabel\">Programming Language</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"language\" \r\n                            value={language} \r\n                            onChange={handleLanguageChange}\r\n                        >\r\n                            {languagesAvailable.map(lang => (\r\n                                <option key={lang} value={lang}>\r\n                                    {lang === 'c_cpp' ? 'C++' : lang.charAt(0).toUpperCase() + lang.slice(1)}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"codeKeybinding\" className=\"fieldLabel\">Editor Keybinding</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"codeKeybinding\" \r\n                            value={codeKeybinding || \"default\"} \r\n                            onChange={handleCodeKeybindingChange}\r\n                        >\r\n                            {codeKeybindingsAvailable.map(kb => (\r\n                                <option key={kb} value={kb}>\r\n                                    {kb.charAt(0).toUpperCase() + kb.slice(1)}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"usersSection\">\r\n                        <div className=\"usersTitle\">Active Collaborators ({fetchedUsers.length})</div>\r\n                        <div className=\"roomSidebarUsers\">\r\n                            {fetchedUsers.map((user) => (\r\n                                <div key={user} className=\"roomSidebarUsersEach\">\r\n                                    <div \r\n                                        className=\"roomSidebarUsersEachAvatar\" \r\n                                        style={{ background: `linear-gradient(135deg, ${generateColor(user)}, ${generateColor(user + 'dark')})` }}\r\n                                    >\r\n                                        {user.slice(0, 2).toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"roomSidebarUsersEachName\">\r\n                                        {user}\r\n                                        {user === username && <span className=\"youLabel\">You</span>}\r\n                                        {typingUsers.includes(user) && user !== username && (\r\n                                            <span className=\"typing-indicator\">typing...</span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"roomSidebarActions\">\r\n                    <button className=\"roomSidebarCopyBtn\" onClick={copyToClipboard}>\r\n                        📋 Copy Room ID\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn runBtn\" onClick={handleRunCode} disabled={isLoading}>\r\n                        {isLoading ? '⏳ Running...' : '▶️ Run Code'}\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn\" onClick={handleLeave}>\r\n                        🚪 Leave Room\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Editor Section */}\r\n            <div className=\"editorSection\">\r\n                <div className=\"editorControls\">\r\n                    <h4> &lt;CodeSync&gt; </h4>\r\n                    <div>\r\n                        <button \r\n                            className=\"aiBtn\" \r\n                            onClick={() => handleAiRequest(\"Ask AI\")} \r\n                            disabled={isAiLoading}\r\n                        >\r\n                            🤖 Explain Code\r\n                        </button>\r\n                        <button \r\n                            className=\"aiBtn\" \r\n                            onClick={() => handleAiRequest(\"Find potential bugs\")} \r\n                            disabled={isAiLoading}\r\n                        >\r\n                            🐛 Find Bugs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <AceEditor\r\n                    ref={editorRef}\r\n                    className=\"roomCodeEditor\"\r\n                    mode={language}\r\n                    keyboardHandler={codeKeybinding}\r\n                    theme=\"monokai\"\r\n                    name=\"collabEditor\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    value={fetchedCode}\r\n                    onChange={onChange}\r\n                    fontSize={15}\r\n                    enableLiveAutocompletion={true}\r\n                    enableBasicAutocompletion={true}\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{ \r\n                        showLineNumbers: true, \r\n                        showPrintMargin: false,\r\n                        highlightActiveLine: true,\r\n                        highlightSelectedWord: true,\r\n                        cursorStyle: \"ace\",\r\n                        mergeUndoDeltas: false,\r\n                        behavioursEnabled: true,\r\n                        wrapBehavioursEnabled: true\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Output Panels */}\r\n            <div className=\"outputContainer\">\r\n                <div className=\"outputPanel\">\r\n                    <h4>💻 Console Output</h4>\r\n                    <pre className=\"outputBox\">{output || \"No output yet. Run your code to see results here.\"}</pre>\r\n                </div>\r\n                <div className=\"aiPanel\">\r\n                    <h4>🤖 AI Assistant</h4>\r\n                    <div className=\"outputBox\">\r\n                        {aiResponse || \"Welcome to your collaborative coding session!\\n\\nI can help you with:\\n•Select some code and click an AI button to get started!\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <Toaster \r\n                position=\"top-right\"\r\n                toastOptions={{\r\n                    style: {\r\n                        background: 'rgba(255, 255, 255, 0.1)',\r\n                        backdropFilter: 'blur(20px)',\r\n                        color: '#f0f2f5',\r\n                        border: '1px solid rgba(255, 255, 255, 0.12)',\r\n                        borderRadius: '16px',\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}