{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\components\\\\SocketWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addPropsToReactElement(element, props) {\n  if ( /*#__PURE__*/React.isValidElement(element)) {\n    return /*#__PURE__*/React.cloneElement(element, props);\n  }\n\n  return element;\n}\n\nfunction addPropsToChildren(children, props) {\n  if (!Array.isArray(children)) {\n    return addPropsToReactElement(children, props);\n  }\n\n  return children.map(childElement => addPropsToReactElement(childElement, props));\n}\n\nexport default function SocketWrapper(_ref) {\n  _s();\n\n  var _location$state2, _location$state3;\n\n  let {\n    children\n  } = _ref;\n  const [isConnected, setIsConnected] = useState(false);\n  const [hasJoinedRoom, setHasJoinedRoom] = useState(false);\n  const [users, setUsers] = useState([]);\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  useEffect(() => {\n    if (!socketRef.current) {\n      // Correct env var: REACT_APP_WEB_SOCKET_URL (no backslashes)\n      const serverUrl = process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\";\n      socketRef.current = io(serverUrl, {\n        transports: ['websocket', 'polling'],\n        timeout: 10000,\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionAttempts: 5,\n        maxReconnectionAttempts: 5\n      });\n      socketRef.current.on('connect', () => {\n        setIsConnected(true);\n        toast.success('Connected to server');\n      });\n      socketRef.current.on('disconnect', reason => {\n        setIsConnected(false);\n        setHasJoinedRoom(false);\n        toast.error(`Disconnected: ${reason}`);\n      });\n      socketRef.current.on('connect_error', error => {\n        setIsConnected(false);\n        toast.error('Failed to connect to server');\n      });\n      socketRef.current.on('updating client list', _ref2 => {\n        let {\n          userslist\n        } = _ref2;\n        setUsers(userslist || []);\n        console.log('Updated users list:', userslist);\n      }); // (Optional) Listen to custom errors from server\n\n      socketRef.current.on('user error', err => {\n        toast.error(err.message || 'Server reported an error.');\n      });\n    } // Clean up socket on unmount\n\n\n    return () => {\n      if (socketRef.current) {\n        if (roomId && hasJoinedRoom) {\n          socketRef.current.emit(\"leave room\", {\n            roomId\n          });\n        }\n\n        socketRef.current.disconnect();\n        socketRef.current = null;\n        setIsConnected(false);\n        setHasJoinedRoom(false);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    var _location$state;\n\n    function kickStrangerOut() {\n      navigate(\"/\", {\n        replace: true\n      });\n      toast.error(\"No username provided\");\n    }\n\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.username)) {\n      kickStrangerOut();\n      return;\n    }\n\n    if (isConnected && socketRef.current && roomId && !hasJoinedRoom) {\n      socketRef.current.emit(\"when a user joins\", {\n        roomId,\n        username: location.state.username\n      });\n      setHasJoinedRoom(true);\n      toast.success(`Joined room: ${roomId}`);\n    }\n  }, [isConnected, location.state, roomId, navigate, hasJoinedRoom]);\n\n  if (!((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.username)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No username provided. Please use the form to join a room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we establish connection...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!hasJoinedRoom) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Joining room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we join the room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: addPropsToChildren(children, {\n      socket: socketRef.current,\n      isConnected,\n      roomId,\n      username: (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.username,\n      users\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SocketWrapper, \"nMoaABPDpn0hSYHQ98+MAn5A01A=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = SocketWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketWrapper\");","map":{"version":3,"names":["React","useEffect","useState","useRef","toast","useLocation","useNavigate","useParams","io","addPropsToReactElement","element","props","isValidElement","cloneElement","addPropsToChildren","children","Array","isArray","map","childElement","SocketWrapper","isConnected","setIsConnected","hasJoinedRoom","setHasJoinedRoom","users","setUsers","socketRef","location","navigate","roomId","current","serverUrl","process","env","REACT_APP_WEB_SOCKET_URL","transports","timeout","reconnection","reconnectionDelay","reconnectionAttempts","maxReconnectionAttempts","on","success","reason","error","userslist","console","log","err","message","emit","disconnect","kickStrangerOut","replace","state","username","socket"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/components/SocketWrapper.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\n\nfunction addPropsToReactElement(element, props) {\n    if (React.isValidElement(element)) {\n        return React.cloneElement(element, props);\n    }\n    return element;\n}\n\nfunction addPropsToChildren(children, props) {\n    if (!Array.isArray(children)) {\n        return addPropsToReactElement(children, props);\n    }\n    return children.map(childElement =>\n        addPropsToReactElement(childElement, props)\n    );\n}\n\nexport default function SocketWrapper({ children }) {\n    const [isConnected, setIsConnected] = useState(false);\n    const [hasJoinedRoom, setHasJoinedRoom] = useState(false);\n    const [users, setUsers] = useState([]);\n    const socketRef = useRef(null);\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { roomId } = useParams();\n\n    useEffect(() => {\n        if (!socketRef.current) {\n            // Correct env var: REACT_APP_WEB_SOCKET_URL (no backslashes)\n            const serverUrl = process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\";\n            socketRef.current = io(serverUrl, {\n                transports: ['websocket', 'polling'],\n                timeout: 10000,\n                reconnection: true,\n                reconnectionDelay: 1000,\n                reconnectionAttempts: 5,\n                maxReconnectionAttempts: 5\n            });\n\n            socketRef.current.on('connect', () => {\n                setIsConnected(true);\n                toast.success('Connected to server');\n            });\n\n            socketRef.current.on('disconnect', (reason) => {\n                setIsConnected(false);\n                setHasJoinedRoom(false);\n                toast.error(`Disconnected: ${reason}`);\n            });\n\n            socketRef.current.on('connect_error', (error) => {\n                setIsConnected(false);\n                toast.error('Failed to connect to server');\n            });\n\n            socketRef.current.on('updating client list', ({ userslist }) => {\n                setUsers(userslist || []);\n                console.log('Updated users list:', userslist);\n            });\n\n            // (Optional) Listen to custom errors from server\n            socketRef.current.on('user error', (err) => {\n                toast.error(err.message || 'Server reported an error.');\n            });\n        }\n\n        // Clean up socket on unmount\n        return () => {\n            if (socketRef.current) {\n                if (roomId && hasJoinedRoom) {\n                    socketRef.current.emit(\"leave room\", { roomId });\n                }\n                socketRef.current.disconnect();\n                socketRef.current = null;\n                setIsConnected(false);\n                setHasJoinedRoom(false);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        function kickStrangerOut() {\n            navigate(\"/\", { replace: true });\n            toast.error(\"No username provided\");\n        }\n\n        if (!location.state?.username) {\n            kickStrangerOut();\n            return;\n        }\n\n        if (isConnected && socketRef.current && roomId && !hasJoinedRoom) {\n            socketRef.current.emit(\"when a user joins\", {\n                roomId,\n                username: location.state.username\n            });\n\n            setHasJoinedRoom(true);\n            toast.success(`Joined room: ${roomId}`);\n        }\n    }, [isConnected, location.state, roomId, navigate, hasJoinedRoom]);\n\n    if (!location.state?.username) {\n        return (\n            <div className=\"room\">\n                <h2>No username provided. Please use the form to join a room.</h2>\n            </div>\n        );\n    }\n\n    if (!isConnected) {\n        return (\n            <div className=\"room\">\n                <h2>Connecting to server...</h2>\n                <p>Please wait while we establish connection...</p>\n            </div>\n        );\n    }\n\n    if (!hasJoinedRoom) {\n        return (\n            <div className=\"room\">\n                <h2>Joining room...</h2>\n                <p>Please wait while we join the room...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {addPropsToChildren(children, {\n                socket: socketRef.current,\n                isConnected,\n                roomId,\n                username: location.state?.username,\n                users\n            })}\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}