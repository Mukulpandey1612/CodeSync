{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\components\\\\SocketWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addPropsToReactElement(element, props) {\n  if ( /*#__PURE__*/React.isValidElement(element)) {\n    return /*#__PURE__*/React.cloneElement(element, props);\n  }\n\n  return element;\n}\n\nfunction addPropsToChildren(children, props) {\n  if (!Array.isArray(children)) {\n    return addPropsToReactElement(children, props);\n  }\n\n  return children.map(childElement => addPropsToReactElement(childElement, props));\n}\n\nexport default function SocketWrapper(_ref) {\n  _s();\n\n  var _location$state2, _location$state3;\n\n  let {\n    children\n  } = _ref;\n  const [isConnected, setIsConnected] = useState(false);\n  const [hasJoinedRoom, setHasJoinedRoom] = useState(false);\n  const [users, setUsers] = useState([]); // <---- ADD THIS\n\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  useEffect(() => {\n    if (!socketRef.current) {\n      const serverUrl = process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\";\n      socketRef.current = io(serverUrl, {\n        transports: ['websocket', 'polling'],\n        timeout: 10000,\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionAttempts: 5,\n        maxReconnectionAttempts: 5\n      }); // CONNECTION EVENTS (same as before)...\n      // Listen for user list updates & always update React state!\n\n      socketRef.current.on('updating client list', _ref2 => {\n        let {\n          userslist\n        } = _ref2;\n        setUsers(userslist); // <-- Update state!\n\n        console.log('Updated users list:', userslist);\n      });\n    } // Cleanup on unmount (same as before) ...\n\n  }, []);\n  useEffect(() => {\n    var _location$state;\n\n    function kickStrangerOut() {\n      navigate(\"/\", {\n        replace: true\n      });\n      toast.error(\"No username provided\");\n    }\n\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.username)) {\n      kickStrangerOut();\n      return;\n    } // Join logic\n\n\n    if (isConnected && socketRef.current && roomId && !hasJoinedRoom) {\n      socketRef.current.emit(\"when a user joins\", {\n        roomId,\n        username: location.state.username\n      });\n      setHasJoinedRoom(true);\n      toast.success(`Joined room: ${roomId}`); // No need for a one-off listener here—state is updated by the global listener.\n    }\n  }, [isConnected, location.state, roomId, navigate, hasJoinedRoom]); // CLEANUP EFFECTS... (unchanged)\n\n  if (!((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.username)) {\n    // Show error UI\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No username provided. Please use the form to join a room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we establish connection...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!hasJoinedRoom) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Joining room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we join the room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: addPropsToChildren(children, {\n      socket: socketRef.current,\n      isConnected,\n      roomId,\n      username: (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.username,\n      users // <---- Pass users as a prop!\n\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SocketWrapper, \"nMoaABPDpn0hSYHQ98+MAn5A01A=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = SocketWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketWrapper\");","map":{"version":3,"names":["React","useEffect","useState","useRef","toast","useLocation","useNavigate","useParams","io","addPropsToReactElement","element","props","isValidElement","cloneElement","addPropsToChildren","children","Array","isArray","map","childElement","SocketWrapper","isConnected","setIsConnected","hasJoinedRoom","setHasJoinedRoom","users","setUsers","socketRef","location","navigate","roomId","current","serverUrl","process","env","REACT_APP_WEB_SOCKET_URL","transports","timeout","reconnection","reconnectionDelay","reconnectionAttempts","maxReconnectionAttempts","on","userslist","console","log","kickStrangerOut","replace","error","state","username","emit","success","socket"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/components/SocketWrapper.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\n\nfunction addPropsToReactElement(element, props) {\n    if (React.isValidElement(element)) {\n        return React.cloneElement(element, props)\n    }\n    return element\n}\n\nfunction addPropsToChildren(children, props) {\n    if (!Array.isArray(children)) {\n        return addPropsToReactElement(children, props)\n    }\n    return children.map(childElement =>\n        addPropsToReactElement(childElement, props)\n    )\n}\n\nexport default function SocketWrapper({ children }) {\n    const [isConnected, setIsConnected] = useState(false)\n    const [hasJoinedRoom, setHasJoinedRoom] = useState(false)\n    const [users, setUsers] = useState([]) // <---- ADD THIS\n    const socketRef = useRef(null)\n    \n    const location = useLocation()\n    const navigate = useNavigate()\n    const { roomId } = useParams()\n\n    useEffect(() => {\n        if (!socketRef.current) {\n            const serverUrl = process.env.REACT_APP_WEB_SOCKET_URL || \"http://localhost:5000\"\n            socketRef.current = io(serverUrl, {\n                transports: ['websocket', 'polling'],\n                timeout: 10000,\n                reconnection: true,\n                reconnectionDelay: 1000,\n                reconnectionAttempts: 5,\n                maxReconnectionAttempts: 5\n            })\n\n            // CONNECTION EVENTS (same as before)...\n\n            // Listen for user list updates & always update React state!\n            socketRef.current.on('updating client list', ({ userslist }) => {\n                setUsers(userslist); // <-- Update state!\n                console.log('Updated users list:', userslist)\n            })\n        }\n\n        // Cleanup on unmount (same as before) ...\n    }, [])\n\n    useEffect(() => {\n        function kickStrangerOut() {\n            navigate(\"/\", { replace: true })\n            toast.error(\"No username provided\")\n        }\n\n        if (!location.state?.username) {\n            kickStrangerOut()\n            return\n        }\n\n        // Join logic\n        if (isConnected && socketRef.current && roomId && !hasJoinedRoom) {\n            socketRef.current.emit(\"when a user joins\", { \n                roomId, \n                username: location.state.username \n            })\n\n            setHasJoinedRoom(true)\n            toast.success(`Joined room: ${roomId}`)\n            // No need for a one-off listener here—state is updated by the global listener.\n        }\n    }, [isConnected, location.state, roomId, navigate, hasJoinedRoom])\n\n    // CLEANUP EFFECTS... (unchanged)\n\n    if (!location.state?.username) {\n        // Show error UI\n        return <div className=\"room\"><h2>No username provided. Please use the form to join a room.</h2></div>\n    }\n\n    if (!isConnected) {\n        return <div className=\"room\"><h2>Connecting to server...</h2><p>Please wait while we establish connection...</p></div>\n    }\n\n    if (!hasJoinedRoom) {\n        return <div className=\"room\"><h2>Joining room...</h2><p>Please wait while we join the room...</p></div>\n    }\n\n    return (\n        <div>\n            {addPropsToChildren(children, { \n                socket: socketRef.current,\n                isConnected,\n                roomId,\n                username: location.state?.username,\n                users // <---- Pass users as a prop!\n            })}\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}