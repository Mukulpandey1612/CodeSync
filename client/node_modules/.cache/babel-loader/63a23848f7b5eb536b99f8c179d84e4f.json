{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor-main\\\\client\\\\src\\\\routes\\\\joinRoom\\\\JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4, validate } from 'uuid';\nimport { Toaster, toast } from 'react-hot-toast';\nimport './JoinRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JoinRoom() {\n  _s();\n\n  const navigate = useNavigate();\n  const [roomId, setRoomId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // Clear any existing navigation state when component mounts\n\n  useEffect(() => {\n    // Clear any previous room state\n    window.history.replaceState(null, '', window.location.pathname);\n  }, []);\n\n  function handleRoomSubmit(e) {\n    e.preventDefault(); // Validate room ID\n\n    if (!roomId || !roomId.trim()) {\n      toast.error(\"Room ID is required\");\n      return;\n    }\n\n    if (!validate(roomId.trim())) {\n      toast.error(\"Invalid room ID format. Please use a valid UUID.\");\n      return;\n    } // Validate username\n\n\n    if (!username || !username.trim()) {\n      toast.error(\"Username is required\");\n      return;\n    }\n\n    const trimmedUsername = username.trim();\n\n    if (trimmedUsername.length < 2) {\n      toast.error(\"Username must be at least 2 characters long\");\n      return;\n    }\n\n    if (trimmedUsername.length > 20) {\n      toast.error(\"Username must be less than 20 characters\");\n      return;\n    } // Check for invalid characters\n\n\n    const validUsernamePattern = /^[a-zA-Z0-9\\s_-]+$/;\n\n    if (!validUsernamePattern.test(trimmedUsername)) {\n      toast.error(\"Username can only contain letters, numbers, spaces, underscores, and hyphens\");\n      return;\n    } // Prevent duplicate spaces\n\n\n    if (trimmedUsername.includes('  ')) {\n      toast.error(\"Username cannot contain multiple consecutive spaces\");\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Add a small delay to show loading state\n      setTimeout(() => {\n        navigate(`/room/${roomId.trim()}`, {\n          state: {\n            username: trimmedUsername,\n            joinTime: Date.now() // Add timestamp for debugging\n\n          },\n          replace: true // Replace current history entry\n\n        });\n      }, 100);\n    } catch (error) {\n      console.error(\"Navigation error:\", error);\n      toast.error(\"Failed to join room\");\n      setIsLoading(false);\n    }\n  }\n\n  function createRoomId() {\n    if (isLoading) return;\n\n    try {\n      const newRoomId = uuidv4();\n      setRoomId(newRoomId);\n      toast.success(\"Room ID created! Share it with others to collaborate.\", {\n        duration: 5000\n      }); // Auto-focus username input after creating room\n\n      setTimeout(() => {\n        const usernameInput = document.getElementById('usernameInput');\n\n        if (usernameInput) {\n          usernameInput.focus();\n        }\n      }, 100);\n    } catch (error) {\n      console.error(\"Error creating room:\", error);\n      toast.error(\"Failed to create room ID\");\n    }\n  }\n\n  function handleRoomIdChange(e) {\n    const value = e.target.value; // Remove extra spaces and convert to lowercase for UUIDs\n\n    const cleanValue = value.trim().toLowerCase();\n    setRoomId(cleanValue);\n  }\n\n  function handleUsernameChange(e) {\n    const value = e.target.value; // Allow spaces but prevent leading spaces and limit length\n\n    if (value.length <= 20) {\n      setUsername(value);\n    }\n  }\n\n  function handleRoomIdPaste(e) {\n    // Handle paste event to clean up pasted UUIDs\n    setTimeout(() => {\n      const pastedValue = e.target.value.trim().toLowerCase();\n      setRoomId(pastedValue);\n    }, 0);\n  }\n\n  function copyRoomIdToClipboard() {\n    if (roomId && validate(roomId)) {\n      navigator.clipboard.writeText(roomId).then(() => {\n        toast.success(\"Room ID copied to clipboard!\");\n      }).catch(() => {\n        toast.error(\"Failed to copy Room ID\");\n      });\n    }\n  } // Handle Enter key in room ID input\n\n\n  function handleRoomIdKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const usernameInput = document.getElementById('usernameInput');\n\n      if (usernameInput) {\n        usernameInput.focus();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"joinBoxWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"joinBox\",\n      onSubmit: handleRoomSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Paste your invitation code down below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joinBoxInputWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"joinBoxInput\",\n          id: \"roomIdInput\",\n          type: \"text\",\n          placeholder: \"Enter room ID (UUID format)\",\n          required: true,\n          onChange: handleRoomIdChange,\n          onPaste: handleRoomIdPaste,\n          onKeyDown: handleRoomIdKeyDown,\n          value: roomId,\n          autoSave: \"off\",\n          autoComplete: \"off\",\n          autoCapitalize: \"off\",\n          spellCheck: \"false\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roomIdInput\",\n          className: \"joinBoxWarning\",\n          children: roomId ? validate(roomId) ? '' : 'Invalid UUID format' : \"Room ID required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), roomId && validate(roomId) && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: copyRoomIdToClipboard,\n          className: \"copyBtn\",\n          style: {\n            fontSize: '12px',\n            padding: '4px 8px',\n            marginTop: '4px',\n            background: 'transparent',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          disabled: isLoading,\n          children: \"\\uD83D\\uDCCB Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joinBoxInputWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"joinBoxInput\",\n          id: \"usernameInput\",\n          type: \"text\",\n          placeholder: \"Enter Guest Username (2-20 characters)\",\n          required: true,\n          value: username,\n          onChange: handleUsernameChange,\n          autoSave: \"off\",\n          autoComplete: \"username\",\n          disabled: isLoading,\n          maxLength: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usernameInput\",\n          className: \"joinBoxWarning\",\n          children: username ? username.trim().length < 2 ? 'At least 2 characters required' : username.trim().length > 20 ? 'Maximum 20 characters' : '' : \"Username required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"joinBoxBtn\",\n        type: \"submit\",\n        disabled: isLoading || !roomId || !username || !validate(roomId) || username.trim().length < 2,\n        children: isLoading ? \"Joining...\" : \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an invite code? Create your\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: \"underline\",\n            cursor: isLoading ? \"not-allowed\" : \"pointer\",\n            color: isLoading ? \"#ccc\" : \"#007bff\",\n            fontWeight: \"500\"\n          },\n          onClick: isLoading ? undefined : createRoomId,\n          children: \"own room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), roomId && validate(roomId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px',\n          padding: '10px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '6px',\n          fontSize: '14px',\n          color: '#666'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Share this Room ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          style: {\n            backgroundColor: '#e9ecef',\n            padding: '2px 6px',\n            borderRadius: '3px',\n            fontFamily: 'monospace'\n          },\n          children: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      toastOptions: {\n        duration: 4000,\n        style: {\n          background: '#363636',\n          color: '#fff',\n          fontSize: '14px'\n        },\n        success: {\n          duration: 3000,\n          iconTheme: {\n            primary: '#4aed88'\n          }\n        },\n        error: {\n          duration: 4000,\n          iconTheme: {\n            primary: '#ff6b6b'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JoinRoom, \"1qX464b92XWlDbDg7gCCvzfGV1I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"names":["useState","useEffect","useNavigate","v4","uuidv4","validate","Toaster","toast","JoinRoom","navigate","roomId","setRoomId","username","setUsername","isLoading","setIsLoading","window","history","replaceState","location","pathname","handleRoomSubmit","e","preventDefault","trim","error","trimmedUsername","length","validUsernamePattern","test","includes","setTimeout","state","joinTime","Date","now","replace","console","createRoomId","newRoomId","success","duration","usernameInput","document","getElementById","focus","handleRoomIdChange","value","target","cleanValue","toLowerCase","handleUsernameChange","handleRoomIdPaste","pastedValue","copyRoomIdToClipboard","navigator","clipboard","writeText","then","catch","handleRoomIdKeyDown","key","fontSize","padding","marginTop","background","border","borderRadius","cursor","textDecoration","color","fontWeight","undefined","backgroundColor","fontFamily","style","iconTheme","primary"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor-main/client/src/routes/joinRoom/JoinRoom.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { v4 as uuidv4, validate } from 'uuid';\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport './JoinRoom.css'\r\n\r\nexport default function JoinRoom() {\r\n    const navigate = useNavigate()\r\n    const [roomId, setRoomId] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    // Clear any existing navigation state when component mounts\r\n    useEffect(() => {\r\n        // Clear any previous room state\r\n        window.history.replaceState(null, '', window.location.pathname)\r\n    }, [])\r\n\r\n    function handleRoomSubmit(e) {\r\n        e.preventDefault()\r\n        \r\n        // Validate room ID\r\n        if (!roomId || !roomId.trim()) {\r\n            toast.error(\"Room ID is required\")\r\n            return\r\n        }\r\n        \r\n        if (!validate(roomId.trim())) {\r\n            toast.error(\"Invalid room ID format. Please use a valid UUID.\")\r\n            return\r\n        }\r\n\r\n        // Validate username\r\n        if (!username || !username.trim()) {\r\n            toast.error(\"Username is required\")\r\n            return\r\n        }\r\n\r\n        const trimmedUsername = username.trim()\r\n        \r\n        if (trimmedUsername.length < 2) {\r\n            toast.error(\"Username must be at least 2 characters long\")\r\n            return\r\n        }\r\n\r\n        if (trimmedUsername.length > 20) {\r\n            toast.error(\"Username must be less than 20 characters\")\r\n            return\r\n        }\r\n\r\n        // Check for invalid characters\r\n        const validUsernamePattern = /^[a-zA-Z0-9\\s_-]+$/\r\n        if (!validUsernamePattern.test(trimmedUsername)) {\r\n            toast.error(\"Username can only contain letters, numbers, spaces, underscores, and hyphens\")\r\n            return\r\n        }\r\n\r\n        // Prevent duplicate spaces\r\n        if (trimmedUsername.includes('  ')) {\r\n            toast.error(\"Username cannot contain multiple consecutive spaces\")\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n        \r\n        try {\r\n            // Add a small delay to show loading state\r\n            setTimeout(() => {\r\n                navigate(`/room/${roomId.trim()}`, { \r\n                    state: { \r\n                        username: trimmedUsername,\r\n                        joinTime: Date.now() // Add timestamp for debugging\r\n                    },\r\n                    replace: true // Replace current history entry\r\n                })\r\n            }, 100)\r\n        } catch (error) {\r\n            console.error(\"Navigation error:\", error)\r\n            toast.error(\"Failed to join room\")\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    function createRoomId() {\r\n        if (isLoading) return\r\n        \r\n        try {\r\n            const newRoomId = uuidv4()\r\n            setRoomId(newRoomId)\r\n            toast.success(\"Room ID created! Share it with others to collaborate.\", {\r\n                duration: 5000\r\n            })\r\n            \r\n            // Auto-focus username input after creating room\r\n            setTimeout(() => {\r\n                const usernameInput = document.getElementById('usernameInput')\r\n                if (usernameInput) {\r\n                    usernameInput.focus()\r\n                }\r\n            }, 100)\r\n        } catch (error) {\r\n            console.error(\"Error creating room:\", error)\r\n            toast.error(\"Failed to create room ID\")\r\n        }\r\n    }\r\n\r\n    function handleRoomIdChange(e) {\r\n        const value = e.target.value\r\n        // Remove extra spaces and convert to lowercase for UUIDs\r\n        const cleanValue = value.trim().toLowerCase()\r\n        setRoomId(cleanValue)\r\n    }\r\n\r\n    function handleUsernameChange(e) {\r\n        const value = e.target.value\r\n        // Allow spaces but prevent leading spaces and limit length\r\n        if (value.length <= 20) {\r\n            setUsername(value)\r\n        }\r\n    }\r\n\r\n    function handleRoomIdPaste(e) {\r\n        // Handle paste event to clean up pasted UUIDs\r\n        setTimeout(() => {\r\n            const pastedValue = e.target.value.trim().toLowerCase()\r\n            setRoomId(pastedValue)\r\n        }, 0)\r\n    }\r\n\r\n    function copyRoomIdToClipboard() {\r\n        if (roomId && validate(roomId)) {\r\n            navigator.clipboard.writeText(roomId).then(() => {\r\n                toast.success(\"Room ID copied to clipboard!\")\r\n            }).catch(() => {\r\n                toast.error(\"Failed to copy Room ID\")\r\n            })\r\n        }\r\n    }\r\n\r\n    // Handle Enter key in room ID input\r\n    function handleRoomIdKeyDown(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            const usernameInput = document.getElementById('usernameInput')\r\n            if (usernameInput) {\r\n                usernameInput.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"joinBoxWrapper\">\r\n            <form className=\"joinBox\" onSubmit={handleRoomSubmit}>\r\n                <p>Paste your invitation code down below</p>\r\n\r\n                <div className=\"joinBoxInputWrapper\">\r\n                    <input\r\n                        className=\"joinBoxInput\"\r\n                        id=\"roomIdInput\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter room ID (UUID format)\"\r\n                        required\r\n                        onChange={handleRoomIdChange}\r\n                        onPaste={handleRoomIdPaste}\r\n                        onKeyDown={handleRoomIdKeyDown}\r\n                        value={roomId}\r\n                        autoSave=\"off\"\r\n                        autoComplete=\"off\"\r\n                        autoCapitalize=\"off\"\r\n                        spellCheck=\"false\"\r\n                        disabled={isLoading}\r\n                    />\r\n                    <label htmlFor=\"roomIdInput\" className=\"joinBoxWarning\">\r\n                        {roomId ? (validate(roomId) ? '' : 'Invalid UUID format') : \"Room ID required\"}\r\n                    </label>\r\n                    {roomId && validate(roomId) && (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={copyRoomIdToClipboard}\r\n                            className=\"copyBtn\"\r\n                            style={{\r\n                                fontSize: '12px',\r\n                                padding: '4px 8px',\r\n                                marginTop: '4px',\r\n                                background: 'transparent',\r\n                                border: '1px solid #ccc',\r\n                                borderRadius: '4px',\r\n                                cursor: 'pointer'\r\n                            }}\r\n                            disabled={isLoading}\r\n                        >\r\n                            📋 Copy\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"joinBoxInputWrapper\">\r\n                    <input\r\n                        className=\"joinBoxInput\"\r\n                        id=\"usernameInput\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Guest Username (2-20 characters)\"\r\n                        required\r\n                        value={username}\r\n                        onChange={handleUsernameChange}\r\n                        autoSave=\"off\"\r\n                        autoComplete=\"username\"\r\n                        disabled={isLoading}\r\n                        maxLength={20}\r\n                    />\r\n                    <label htmlFor=\"usernameInput\" className=\"joinBoxWarning\">\r\n                        {username ? \r\n                            (username.trim().length < 2 ? 'At least 2 characters required' : \r\n                             username.trim().length > 20 ? 'Maximum 20 characters' : '') \r\n                            : \"Username required\"}\r\n                    </label>\r\n                </div>\r\n\r\n                <button \r\n                    className=\"joinBoxBtn\" \r\n                    type=\"submit\"\r\n                    disabled={isLoading || !roomId || !username || !validate(roomId) || username.trim().length < 2}\r\n                >\r\n                    {isLoading ? \"Joining...\" : \"Join\"}\r\n                </button>\r\n                \r\n                <p>\r\n                    Don't have an invite code? Create your{\" \"}\r\n                    <span\r\n                        style={{ \r\n                            textDecoration: \"underline\", \r\n                            cursor: isLoading ? \"not-allowed\" : \"pointer\",\r\n                            color: isLoading ? \"#ccc\" : \"#007bff\",\r\n                            fontWeight: \"500\"\r\n                        }}\r\n                        onClick={isLoading ? undefined : createRoomId}\r\n                    >\r\n                        own room\r\n                    </span>\r\n                </p>\r\n\r\n                {roomId && validate(roomId) && (\r\n                    <div style={{ \r\n                        marginTop: '15px', \r\n                        padding: '10px', \r\n                        backgroundColor: '#f8f9fa', \r\n                        borderRadius: '6px',\r\n                        fontSize: '14px',\r\n                        color: '#666'\r\n                    }}>\r\n                        <strong>Share this Room ID:</strong><br />\r\n                        <code style={{ \r\n                            backgroundColor: '#e9ecef', \r\n                            padding: '2px 6px', \r\n                            borderRadius: '3px',\r\n                            fontFamily: 'monospace'\r\n                        }}>\r\n                            {roomId}\r\n                        </code>\r\n                    </div>\r\n                )}\r\n            </form>\r\n            <Toaster \r\n                position=\"top-center\"\r\n                toastOptions={{\r\n                    duration: 4000,\r\n                    style: {\r\n                        background: '#363636',\r\n                        color: '#fff',\r\n                        fontSize: '14px'\r\n                    },\r\n                    success: {\r\n                        duration: 3000,\r\n                        iconTheme: {\r\n                            primary: '#4aed88',\r\n                        },\r\n                    },\r\n                    error: {\r\n                        duration: 4000,\r\n                        iconTheme: {\r\n                            primary: '#ff6b6b',\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}