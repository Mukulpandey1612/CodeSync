{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukul Pandey\\\\Downloads\\\\Collab-code-editor-main\\\\Collab-code-editor\\\\client\\\\src\\\\routes\\\\room\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate } from \"react-router-dom\";\nimport { generateColor } from \"../../utils\";\nimport './Room.css';\nimport { useSocket } from '../../components/SocketWrapper'; // Import necessary modes, themes, and extensions for Ace Editor\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-typescript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n\n  const {\n    socket,\n    isConnected,\n    username,\n    roomId\n  } = useSocket();\n  const navigate = useNavigate();\n  const editorRef = useRef(null); // States\n\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n  const [fetchedCode, setFetchedCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [codeKeybinding, setCodeKeybinding] = useState(undefined);\n  const [output, setOutput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\n  const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\n  const onChange = useCallback(newValue => {\n    if (socket) {\n      setFetchedCode(newValue);\n      socket.emit(\"update code\", {\n        roomId,\n        code: newValue\n      });\n    }\n  }, [socket, roomId]);\n  const handleLanguageChange = useCallback(e => {\n    if (socket) {\n      const newLanguage = e.target.value;\n      setLanguage(newLanguage);\n      socket.emit(\"update language\", {\n        roomId,\n        languageUsed: newLanguage\n      });\n    }\n  }, [socket, roomId]);\n  const handleCodeKeybindingChange = useCallback(e => {\n    const value = e.target.value;\n    setCodeKeybinding(value === \"default\" ? undefined : value);\n  }, []);\n  const handleLeave = useCallback(() => {\n    sessionStorage.removeItem('username');\n\n    if (socket) {\n      socket.emit(\"leave room\", {\n        roomId\n      });\n    }\n\n    navigate('/', {\n      replace: true,\n      state: {}\n    });\n  }, [socket, roomId, navigate]);\n  const copyToClipboard = useCallback(async () => {\n    if (!roomId) return;\n\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID copied to clipboard');\n    } catch (error) {\n      toast.error('Failed to copy room ID');\n    }\n  }, [roomId]);\n\n  const handleRunCode = async () => {\n    setIsLoading(true);\n    setOutput(\"Executing code...\");\n\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          language: language,\n          code: fetchedCode\n        })\n      });\n      const result = await response.json();\n      if (result.stdout) setOutput(result.stdout);else if (result.stderr) setOutput(result.stderr);else if (result.compile_output) setOutput(result.compile_output);else setOutput(\"Execution finished with no output.\");\n    } catch (error) {\n      setOutput(\"An error occurred. Could not run the code.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }; // ðŸ‘‡ THIS FUNCTION HAS BEEN CORRECTED\n\n\n  const handleAiRequest = async prompt => {\n    var _editorRef$current;\n\n    const editor = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.editor;\n    if (!editor) return;\n    const selectedCode = editor.getSelectedText();\n\n    if (!selectedCode) {\n      toast.error(\"Please select a block of code first.\");\n      return;\n    }\n\n    setIsAiLoading(true);\n    setAiResponse(`AI is thinking about: \"${prompt}\"...`);\n\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiUrl}/ask-ai`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code: selectedCode,\n          prompt: prompt\n        })\n      });\n      const result = await response.json();\n      setAiResponse(result.response || \"No response from AI.\");\n    } catch (error) {\n      setAiResponse(\"An error occurred. Could not get a response from the AI.\");\n    } finally {\n      setIsAiLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUpdateClientList = _ref => {\n      let {\n        userslist\n      } = _ref;\n      return setFetchedUsers(userslist || []);\n    };\n\n    const handleLanguageChange = _ref2 => {\n      let {\n        languageUsed\n      } = _ref2;\n      if (languageUsed) setLanguage(languageUsed);\n    };\n\n    const handleCodeChange = _ref3 => {\n      let {\n        code\n      } = _ref3;\n      return setFetchedCode(code || \"\");\n    };\n\n    socket.on(\"updating client list\", handleUpdateClientList);\n    socket.on(\"on language change\", handleLanguageChange);\n    socket.on(\"on code change\", handleCodeChange);\n    return () => {\n      socket.off(\"updating client list\", handleUpdateClientList);\n      socket.off(\"on language change\", handleLanguageChange);\n      socket.off(\"on code change\", handleCodeChange);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!isConnected || !socket) {\n      const timer = setTimeout(() => {\n        if (!(socket !== null && socket !== void 0 && socket.connected)) {\n          toast.error(\"Connection lost. Returning to home page.\");\n          navigate('/', {\n            replace: true\n          });\n        }\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isConnected, socket, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomSidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomId ? roomId.substring(0, 8) : '...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language\",\n            className: \"fieldLabel\",\n            children: \"LANGUAGE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"language\",\n            value: language,\n            onChange: handleLanguageChange,\n            children: languagesAvailable.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang,\n              children: lang.toUpperCase()\n            }, lang, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"languageFieldWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"codeKeybinding\",\n            className: \"fieldLabel\",\n            children: \"KEYBINDING:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"languageField\",\n            id: \"codeKeybinding\",\n            value: codeKeybinding || \"default\",\n            onChange: handleCodeKeybindingChange,\n            children: codeKeybindingsAvailable.map(kb => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kb,\n              children: kb.toUpperCase()\n            }, kb, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usersSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"usersTitle\",\n            children: [\"CONNECTED USERS (\", fetchedUsers.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSidebarUsers\",\n            children: fetchedUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"roomSidebarUsersEach\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachAvatar\",\n                style: {\n                  backgroundColor: generateColor(user)\n                },\n                children: user.slice(0, 2).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"roomSidebarUsersEachName\",\n                children: [user, user === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"youLabel\",\n                  children: \" (You)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)]\n            }, user, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomSidebarActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarCopyBtn\",\n          onClick: copyToClipboard,\n          children: \"COPY ROOM ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn\",\n          onClick: handleLeave,\n          children: \"LEAVE ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"roomSidebarBtn runBtn\",\n          onClick: handleRunCode,\n          disabled: isLoading,\n          children: isLoading ? 'Running...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editorControls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aiBtn\",\n          onClick: () => handleAiRequest(\"Explain this code\"),\n          disabled: isAiLoading,\n          children: \"Explain Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aiBtn\",\n          onClick: () => handleAiRequest(\"Find potential bugs\"),\n          disabled: isAiLoading,\n          children: \"Find Bugs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        ref: editorRef,\n        className: \"roomCodeEditor\",\n        mode: language,\n        keyboardHandler: codeKeybinding,\n        theme: \"monokai\",\n        name: \"collabEditor\",\n        width: \"auto\",\n        height: \"auto\",\n        value: fetchedCode,\n        onChange: onChange,\n        fontSize: 15,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true,\n        editorProps: {\n          $blockScrolling: true\n        },\n        setOptions: {\n          showLineNumbers: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outputPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"outputBox\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aiPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"AI Assistant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"outputBox\",\n            children: aiResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"zfSnmwE1b/aKUE9g5K5pd0lNXWA=\", false, function () {\n  return [useSocket, useNavigate];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","AceEditor","Toaster","toast","useNavigate","generateColor","useSocket","Room","socket","isConnected","username","roomId","navigate","editorRef","fetchedUsers","setFetchedUsers","fetchedCode","setFetchedCode","language","setLanguage","codeKeybinding","setCodeKeybinding","undefined","output","setOutput","isLoading","setIsLoading","aiResponse","setAiResponse","isAiLoading","setIsAiLoading","languagesAvailable","codeKeybindingsAvailable","onChange","newValue","emit","code","handleLanguageChange","e","newLanguage","target","value","languageUsed","handleCodeKeybindingChange","handleLeave","sessionStorage","removeItem","replace","state","copyToClipboard","navigator","clipboard","writeText","success","error","handleRunCode","apiUrl","process","env","REACT_APP_API_URL","response","fetch","method","headers","body","JSON","stringify","result","json","stdout","stderr","compile_output","handleAiRequest","prompt","editor","current","selectedCode","getSelectedText","handleUpdateClientList","userslist","handleCodeChange","on","off","timer","setTimeout","connected","clearTimeout","substring","map","lang","toUpperCase","kb","length","user","backgroundColor","slice","$blockScrolling","showLineNumbers"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor/client/src/routes/room/Room.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { generateColor } from \"../../utils\";\r\nimport './Room.css';\r\nimport { useSocket } from '../../components/SocketWrapper';\r\n\r\n// Import necessary modes, themes, and extensions for Ace Editor\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/mode-typescript\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-golang\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/ext-searchbox\";\r\n\r\nexport default function Room() {\r\n    const { socket, isConnected, username, roomId } = useSocket();\r\n    const navigate = useNavigate();\r\n    const editorRef = useRef(null);\r\n\r\n    // States\r\n    const [fetchedUsers, setFetchedUsers] = useState([]);\r\n    const [fetchedCode, setFetchedCode] = useState(\"\");\r\n    const [language, setLanguage] = useState(\"javascript\");\r\n    const [codeKeybinding, setCodeKeybinding] = useState(undefined);\r\n    const [output, setOutput] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [aiResponse, setAiResponse] = useState(\"\");\r\n    const [isAiLoading, setIsAiLoading] = useState(false);\r\n\r\n    const languagesAvailable = [\"javascript\", \"java\", \"c_cpp\", \"python\", \"typescript\", \"golang\"];\r\n    const codeKeybindingsAvailable = [\"default\", \"emacs\", \"vim\"];\r\n\r\n    const onChange = useCallback((newValue) => {\r\n        if (socket) {\r\n            setFetchedCode(newValue);\r\n            socket.emit(\"update code\", { roomId, code: newValue });\r\n        }\r\n    }, [socket, roomId]);\r\n\r\n    const handleLanguageChange = useCallback((e) => {\r\n        if (socket) {\r\n            const newLanguage = e.target.value;\r\n            setLanguage(newLanguage);\r\n            socket.emit(\"update language\", { roomId, languageUsed: newLanguage });\r\n        }\r\n    }, [socket, roomId]);\r\n\r\n    const handleCodeKeybindingChange = useCallback((e) => {\r\n        const value = e.target.value;\r\n        setCodeKeybinding(value === \"default\" ? undefined : value);\r\n    }, []);\r\n\r\n    const handleLeave = useCallback(() => {\r\n        sessionStorage.removeItem('username');\r\n        if (socket) {\r\n            socket.emit(\"leave room\", { roomId });\r\n        }\r\n        navigate('/', { replace: true, state: {} });\r\n    }, [socket, roomId, navigate]);\r\n\r\n    const copyToClipboard = useCallback(async () => {\r\n        if (!roomId) return;\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success('Room ID copied to clipboard');\r\n        } catch (error) {\r\n            toast.error('Failed to copy room ID');\r\n        }\r\n    }, [roomId]);\r\n\r\n    const handleRunCode = async () => {\r\n        setIsLoading(true);\r\n        setOutput(\"Executing code...\");\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/execute`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    language: language,\r\n                    code: fetchedCode\r\n                })\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (result.stdout) setOutput(result.stdout);\r\n            else if (result.stderr) setOutput(result.stderr);\r\n            else if (result.compile_output) setOutput(result.compile_output);\r\n            else setOutput(\"Execution finished with no output.\");\r\n            \r\n        } catch (error) {\r\n            setOutput(\"An error occurred. Could not run the code.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // ðŸ‘‡ THIS FUNCTION HAS BEEN CORRECTED\r\n    const handleAiRequest = async (prompt) => {\r\n        const editor = editorRef.current?.editor;\r\n        if (!editor) return;\r\n\r\n        const selectedCode = editor.getSelectedText();\r\n        if (!selectedCode) {\r\n            toast.error(\"Please select a block of code first.\");\r\n            return;\r\n        }\r\n\r\n        setIsAiLoading(true);\r\n        setAiResponse(`AI is thinking about: \"${prompt}\"...`);\r\n\r\n        try {\r\n            const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n            const response = await fetch(`${apiUrl}/ask-ai`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    code: selectedCode,\r\n                    prompt: prompt\r\n                })\r\n            });\r\n\r\n            const result = await response.json();\r\n            setAiResponse(result.response || \"No response from AI.\");\r\n\r\n        } catch (error) {\r\n            setAiResponse(\"An error occurred. Could not get a response from the AI.\");\r\n        } finally {\r\n            setIsAiLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        const handleUpdateClientList = ({ userslist }) => setFetchedUsers(userslist || []);\r\n        const handleLanguageChange = ({ languageUsed }) => { if (languageUsed) setLanguage(languageUsed); };\r\n        const handleCodeChange = ({ code }) => setFetchedCode(code || \"\");\r\n\r\n        socket.on(\"updating client list\", handleUpdateClientList);\r\n        socket.on(\"on language change\", handleLanguageChange);\r\n        socket.on(\"on code change\", handleCodeChange);\r\n\r\n        return () => {\r\n            socket.off(\"updating client list\", handleUpdateClientList);\r\n            socket.off(\"on language change\", handleLanguageChange);\r\n            socket.off(\"on code change\", handleCodeChange);\r\n        };\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        if (!isConnected || !socket) {\r\n            const timer = setTimeout(() => {\r\n                if (!socket?.connected) {\r\n                    toast.error(\"Connection lost. Returning to home page.\");\r\n                    navigate('/', {replace: true});\r\n                }\r\n            }, 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [isConnected, socket, navigate]);\r\n\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"roomSidebar\">\r\n                <div className=\"roomSidebarHeader\">\r\n                    <h3>Room: {roomId ? roomId.substring(0, 8) : '...'}</h3>\r\n                    <p>User: {username}</p>\r\n                </div>\r\n                \r\n                <div className=\"roomSidebarContent\">\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"language\" className=\"fieldLabel\">LANGUAGE:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"language\" \r\n                            value={language} \r\n                            onChange={handleLanguageChange}\r\n                        >\r\n                            {languagesAvailable.map(lang => (\r\n                                <option key={lang} value={lang}>{lang.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"languageFieldWrapper\">\r\n                        <label htmlFor=\"codeKeybinding\" className=\"fieldLabel\">KEYBINDING:</label>\r\n                        <select \r\n                            className=\"languageField\" \r\n                            id=\"codeKeybinding\" \r\n                            value={codeKeybinding || \"default\"} \r\n                            onChange={handleCodeKeybindingChange}\r\n                        >\r\n                            {codeKeybindingsAvailable.map(kb => (\r\n                                <option key={kb} value={kb}>{kb.toUpperCase()}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"usersSection\">\r\n                        <p className=\"usersTitle\">CONNECTED USERS ({fetchedUsers.length})</p>\r\n                        <div className=\"roomSidebarUsers\">\r\n                            {fetchedUsers.map((user) => (\r\n                                <div key={user} className=\"roomSidebarUsersEach\">\r\n                                    <div \r\n                                        className=\"roomSidebarUsersEachAvatar\" \r\n                                        style={{ backgroundColor: generateColor(user) }}\r\n                                    >\r\n                                        {user.slice(0, 2).toUpperCase()}\r\n                                    </div>\r\n                                    <div className=\"roomSidebarUsersEachName\">\r\n                                        {user}\r\n                                        {user === username && <span className=\"youLabel\"> (You)</span>}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"roomSidebarActions\">\r\n                    <button className=\"roomSidebarCopyBtn\" onClick={copyToClipboard}>\r\n                        COPY ROOM ID\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn\" onClick={handleLeave}>\r\n                        LEAVE ROOM\r\n                    </button>\r\n                    <button className=\"roomSidebarBtn runBtn\" onClick={handleRunCode} disabled={isLoading}>\r\n                        {isLoading ? 'Running...' : 'Run Code'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"editorSection\">\r\n                <div className=\"editorControls\">\r\n                    <button className=\"aiBtn\" onClick={() => handleAiRequest(\"Explain this code\")} disabled={isAiLoading}>\r\n                        Explain Code\r\n                    </button>\r\n                    <button className=\"aiBtn\" onClick={() => handleAiRequest(\"Find potential bugs\")} disabled={isAiLoading}>\r\n                        Find Bugs\r\n                    </button>\r\n                </div>\r\n\r\n                <AceEditor\r\n                    ref={editorRef}\r\n                    className=\"roomCodeEditor\"\r\n                    mode={language}\r\n                    keyboardHandler={codeKeybinding}\r\n                    theme=\"monokai\"\r\n                    name=\"collabEditor\"\r\n                    width=\"auto\"\r\n                    height=\"auto\"\r\n                    value={fetchedCode}\r\n                    onChange={onChange}\r\n                    fontSize={15}\r\n                    enableLiveAutocompletion={true}\r\n                    enableBasicAutocompletion={true}\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{ showLineNumbers: true }}\r\n                />\r\n                \r\n                <div className=\"outputContainer\">\r\n                    <div className=\"outputPanel\">\r\n                        <h4>Output:</h4>\r\n                        <pre className=\"outputBox\">{output}</pre>\r\n                    </div>\r\n                    <div className=\"aiPanel\">\r\n                        <h4>AI Assistant:</h4>\r\n                        <pre className=\"outputBox\">{aiResponse}</pre>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Toaster position=\"top-right\" />\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}