{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/golang_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var GolangHighlightRules = function () {\n    var keywords = \"else|break|case|return|goto|if|const|select|\" + \"continue|struct|default|switch|for|range|\" + \"func|import|package|chan|defer|fallthrough|go|interface|map|range|\" + \"select|type|var\";\n    var builtinTypes = \"string|uint8|uint16|uint32|uint64|int8|int16|int32|int64|float32|\" + \"float64|complex64|complex128|byte|rune|uint|int|uintptr|bool|error\";\n    var builtinFunctions = \"new|close|cap|copy|panic|panicln|print|println|len|make|delete|real|recover|imag|append\";\n    var builtinConstants = \"nil|true|false|iota\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants,\n      \"support.function\": builtinFunctions,\n      \"support.type\": builtinTypes\n    }, \"\");\n    var stringEscapeRe = \"\\\\\\\\(?:[0-7]{3}|x\\\\h{2}|u{4}|U\\\\h{6}|[abfnrtv'\\\"\\\\\\\\])\".replace(/\\\\h/g, \"[a-fA-F\\\\d]\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment.start\",\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        regex: /\"(?:[^\"\\\\]|\\\\.)*?\"/\n      }, {\n        token: \"string\",\n        regex: '`',\n        next: \"bqstring\"\n      }, {\n        token: \"constant.numeric\",\n        regex: \"'(?:[^\\\\'\\uD800-\\uDBFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\" + stringEscapeRe.replace('\"', '') + \")'\"\n      }, {\n        token: \"constant.numeric\",\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: \"(func)(\\\\s+)([a-zA-Z_$][a-zA-Z0-9_$]*)\\\\b\"\n      }, {\n        token: function (val) {\n          if (val[val.length - 1] == \"(\") {\n            return [{\n              type: keywordMapper(val.slice(0, -1)) || \"support.function\",\n              value: val.slice(0, -1)\n            }, {\n              type: \"paren.lparen\",\n              value: val.slice(-1)\n            }];\n          }\n\n          return keywordMapper(val) || \"identifier\";\n        },\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\\\\(?\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment.end\",\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"bqstring\": [{\n        token: \"string\",\n        regex: '`',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  oop.inherits(GolangHighlightRules, TextHighlightRules);\n  exports.GolangHighlightRules = GolangHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/golang\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/golang_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var GolangHighlightRules = require(\"./golang_highlight_rules\").GolangHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = GolangHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    }; //end getNextLineIndent\n\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/golang\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/golang\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","GolangHighlightRules","keywords","builtinTypes","builtinFunctions","builtinConstants","keywordMapper","createKeywordMapper","stringEscapeRe","replace","val","length","type","slice","value","embedRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","$id"],"sources":["C:/Users/Mukul Pandey/Downloads/Collab-code-editor-main/Collab-code-editor/client/node_modules/ace-builds/src-noconflict/mode-golang.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\/\\\\*(?=\\\\*)\",\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/golang_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){var oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar GolangHighlightRules = function () {\n    var keywords = (\"else|break|case|return|goto|if|const|select|\" +\n        \"continue|struct|default|switch|for|range|\" +\n        \"func|import|package|chan|defer|fallthrough|go|interface|map|range|\" +\n        \"select|type|var\");\n    var builtinTypes = (\"string|uint8|uint16|uint32|uint64|int8|int16|int32|int64|float32|\" +\n        \"float64|complex64|complex128|byte|rune|uint|int|uintptr|bool|error\");\n    var builtinFunctions = (\"new|close|cap|copy|panic|panicln|print|println|len|make|delete|real|recover|imag|append\");\n    var builtinConstants = (\"nil|true|false|iota\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants,\n        \"support.function\": builtinFunctions,\n        \"support.type\": builtinTypes\n    }, \"\");\n    var stringEscapeRe = \"\\\\\\\\(?:[0-7]{3}|x\\\\h{2}|u{4}|U\\\\h{6}|[abfnrtv'\\\"\\\\\\\\])\".replace(/\\\\h/g, \"[a-fA-F\\\\d]\");\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment.start\",\n                regex: \"\\\\/\\\\*\",\n                next: \"comment\"\n            }, {\n                token: \"string\",\n                regex: /\"(?:[^\"\\\\]|\\\\.)*?\"/\n            }, {\n                token: \"string\",\n                regex: '`',\n                next: \"bqstring\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"'(?:[^\\\\'\\uD800-\\uDBFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\" + stringEscapeRe.replace('\"', '') + \")'\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token: [\"keyword\", \"text\", \"entity.name.function\"],\n                regex: \"(func)(\\\\s+)([a-zA-Z_$][a-zA-Z0-9_$]*)\\\\b\"\n            }, {\n                token: function (val) {\n                    if (val[val.length - 1] == \"(\") {\n                        return [{\n                                type: keywordMapper(val.slice(0, -1)) || \"support.function\",\n                                value: val.slice(0, -1)\n                            }, {\n                                type: \"paren.lparen\",\n                                value: val.slice(-1)\n                            }];\n                    }\n                    return keywordMapper(val) || \"identifier\";\n                },\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\\\\(?\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment.end\",\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"bqstring\": [\n            {\n                token: \"string\",\n                regex: '`',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n};\noop.inherits(GolangHighlightRules, TextHighlightRules);\nexports.GolangHighlightRules = GolangHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/golang\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/golang_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module){var oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar GolangHighlightRules = require(\"./golang_highlight_rules\").GolangHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = GolangHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    }; //end getNextLineIndent\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/golang\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/golang\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}